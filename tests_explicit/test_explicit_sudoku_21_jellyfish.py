from tech import tech
from tests_explicit.test_small_explicit import solve
import pytest


@pytest.mark.skip("SKIPPED")
def test_sudoku_explicit_jelly_fish_cols():
    actual = \
        f"""
        _________a __34_____a _________a    _________b _________b _______8_b    _____6___c _________c __34_____c
        _________a 1_3_5____a _________a    _________b _________b _____6___b    1_3______c _________c _______8_c
        _________a 1__4_____a _________a    _________b _________b __3______b    1__4_____c _________c ________9c
        
        _________d _______8_d _________d    _________e _________e ___45____e    _2_______f _________f __34_____f
        _________d _____6___d _________d    _________e _________e _2_______e    ________9f _________f ______7__f
        _________d _2_______d _________d    _________e _________e ______7__e    ____5____f _________f _____6___f
        
        _________g ______7_9g _________g    _________h _________h ___45____h    __34_____i _________i 1________i
        _________g 1_____7__g _________g    _________h _________h ________9h    _______8_i _________i ____5____i
        _________g ____5___9g _________g    _________h _________h 1________h    ______7__i _________i _2_______i
        """

    expected = \
        f"""
        123_56789a __34_____a 123_56789a    123_56789b 123_56789b _______8_b    _____6___c 123_56789c __34_____c
        _________a 1_3_5____a _________a    _________b _________b _____6___b    1_3______c _________c _______8_c
        123_56789a 1__4_____a 123_56789a    123_56789b 123_56789b __3______b    1__4_____c 123_56789c ________9c
        
        123_56789d _______8_d 123_56789d    123_56789e 123_56789e ___45____e    _2_______f 123_56789f __34_____f
        _________d _____6___d _________d    _________e _________e _2_______e    ________9f _________f ______7__f
        _________d _2_______d _________d    _________e _________e ______7__e    ____5____f _________f _____6___f
        
        123_56789g ______7_9g 123_56789g    123_56789h 123_56789h ___45____h    __34_____i 123_56789i 1________i
        _________g 1_____7__g _________g    _________h _________h ________9h    _______8_i _________i ____5____i
        _________g ____5___9g _________g    _________h _________h 1________h    ______7__i _________i _2_______i
        """
    if solve(9, actual, expected, tech.JellyFish()):
        return
    assert False


@pytest.mark.skip("SKIPPED")
def test_sudoku_explicit_jelly_fish_rows():
    actual = \
        f"""
        _________a _________a _________a    _________b _________b _________b    _________c _________c _________c
        _23456789a _________a _23456789a    _________b _23456789b _________b    _23456789c _________c _23456789c
        _________a _________a _________a    _________b _________b _________b    _________c _________c _________c
        
        _23456789d _________d _23456789d    _________e _23456789e _________e    _23456789f _________f _23456789f
        _________d _________d _________d    _________e _________e _________e    _________f _________f _________f
        _23456789d _________d _23456789d    _________e _23456789e _________e    _23456789f _________f _23456789f
        
        _________g _________g _________g    _________h _________h _________h    _________i _________i _________i
        _23456789g _________g _23456789g    _________h _23456789h _________h    _23456789i _________i _23456789i
        _________g _________g _________g    _________h _________h _________h    _________i _________i _________i
        """

    expected = \
        f"""
        _________a _23456789a _________a    _23456789b _________b _23456789b    _________c _23456789c _________c
        _23456789a _________a _23456789a    _________b _23456789b _________b    _23456789c _________c _23456789c
        _________a _23456789a _________a    _23456789b _________b _23456789b    _________c _23456789c _________c
        
        _23456789d _________d _23456789d    _________e _23456789e _________e    _23456789f _________f _23456789f
        _________d _23456789d _________d    _23456789e _________e _23456789e    _________f _23456789f _________f
        _23456789d _________d _23456789d    _________e _23456789e _________e    _23456789f _________f _23456789f
        
        _________g _23456789g _________g    _23456789h _________h _23456789h    _________i _23456789i _________i
        _23456789g _________g _23456789g    _________h _23456789h _________h    _23456789i _________i _23456789i
        _________g _23456789g _________g    _23456789h _________h _23456789h    _________i _23456789i _________i
        """
    if solve(9, actual, expected, tech.JellyFish()):
        return
    assert False
