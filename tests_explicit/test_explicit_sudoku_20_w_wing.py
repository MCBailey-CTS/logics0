import pytest

from techniques import *
from tests_explicit.test_small_explicit import solve


@pytest.mark.skip("skipped")
def test_sudoku_explicit_w_wing_rows():
    actual = \
        f"""
        _________a _________a _________a    _________b _________b _________b    _________c _________c _________c
        _________a _________a _________a    _________b _________b _________b    _________c _________c _________c
        _________a _________a _________a    _________b _________b _________b    _________c _________c _________c
        
        _________d _________d 12_______d    _________e _________e _________e    _________f _________f _________f
        _________d _________d _________d    _________e _________e _________e    12_______f _________f _________f
        _________d _________d _________d    _23456789e _23456789e _23456789e    _________f _________f _________f
        
        _________g _________g _________g    _________h _________h _________h    _________i _________i _________i
        _________g _________g _________g    _________h _________h _________h    _________i _________i _________i
        _________g _________g _________g    _________h _________h _________h    _________i _________i _________i
        """

    expected = \
        f"""
        _________a _________a _________a    _________b _________b _________b    _________c _________c _________c
        _________a _________a _________a    _________b _________b _________b    _________c _________c _________c
        _________a _________a _________a    _________b _________b _________b    _________c _________c _________c
        
        _________d _________d 12_______d    _________e _________e _________e    1_3456789f 1_3456789f 1_3456789f
        1_3456789d 1_3456789d 1_3456789d    _________e _________e _________e    12_______f _________f _________f
        _________d _________d _________d    _23456789e _23456789e _23456789e    _________f _________f _________f
        
        _________g _________g _________g    _________h _________h _________h    _________i _________i _________i
        _________g _________g _________g    _________h _________h _________h    _________i _________i _________i
        _________g _________g _________g    _________h _________h _________h    _________i _________i _________i
        """
    if solve(9, actual, expected, WWing()):
        return
    assert False
