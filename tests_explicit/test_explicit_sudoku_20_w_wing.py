import pytest

from techniques import *
from tests_explicit.test_small_explicit import solve


@pytest.mark.skip('skipped')
def test_sudoku_explicit_w_wing_rows0():
    actual = \
        f"""
        _________a _________a _________a    _________b _________b _________b    _________c _________c _________c
        _________a _________a _________a    _________b _________b _________b    _________c _________c _________c
        _________a _________a _________a    _________b _________b _________b    _________c _________c _________c
        
        _________d _________d 12_______d    _________e _________e _________e    _________f _________f _________f
        _________d _________d _________d    _________e _________e _________e    12_______f _________f _________f
        _________d _________d _________d    _23456789e _23456789e _23456789e    _________f _________f _________f
        
        _________g _________g _________g    _________h _________h _________h    _________i _________i _________i
        _________g _________g _________g    _________h _________h _________h    _________i _________i _________i
        _________g _________g _________g    _________h _________h _________h    _________i _________i _________i
        """

    expected = \
        f"""
        _________a _________a _________a    _________b _________b _________b    _________c _________c _________c
        _________a _________a _________a    _________b _________b _________b    _________c _________c _________c
        _________a _________a _________a    _________b _________b _________b    _________c _________c _________c
        
        _________d _________d 12_______d    _________e _________e _________e    1_3456789f 1_3456789f 1_3456789f
        1_3456789d 1_3456789d 1_3456789d    _________e _________e _________e    12_______f _________f _________f
        _________d _________d _________d    _23456789e _23456789e _23456789e    _________f _________f _________f
        
        _________g _________g _________g    _________h _________h _________h    _________i _________i _________i
        _________g _________g _________g    _________h _________h _________h    _________i _________i _________i
        _________g _________g _________g    _________h _________h _________h    _________i _________i _________i
        """
    if solve(9, actual, expected, WWing()):
        return
    assert False


@pytest.mark.skip('skipped')
def test_sudoku_explicit_w_wing_rows1():
    actual = \
        f"""
        _______8_g 1________g _23______g    _________h _________h _________h    _________i _________i __3__6___i
        ________9g __34_____g _234_____g    _________h _________h __3___6__h    _________i _________i _________i
        ____5____g _____6___g ______7__g    _________h _________h _________h    _________i _________i _________i
        
        _________a _________a _________a    _________b _________b _________b    _________c _________c _________c
        _________a _________a _________a    _________b _________b _________b    _________c _________c _________c
        _________a _________a _________a    _________b _________b _________b    _________c _________c _________c

        _________d _________d _________d    _________e _________e _________e    _________f _________f _________f
        _________d _________d _________d    _________e _________e _________e    _________f _________f _________f
        _________d _________d _________d    _________e _________e _________e    _________f _________f _________f

        
        """

    expected = \
        f"""
        _______8_g 1________g _23______g    12345_789h 12345_789h 12345_789h    _________i _________i __3__6___i
        ________9g __34_____g _234_____g    _________h _________h __3___6__h    12345_789i 12345_789i 12345_789i
        ____5____g _____6___g ______7__g    _________h _________h _________h    _________i _________i _________i

        _________d _________d _________d    _________e _________e _________e    _________f _________f _________f
        _________d _________d _________d    _________e _________e _________e    _________f _________f _________f
        _________d _________d _________d    _________e _________e _________e    _________f _________f _________f

        _________g _________g _________g    _________h _________h _________h    _________i _________i _________i
        _________g _________g _________g    _________h _________h _________h    _________i _________i _________i
        _________g _________g _________g    _________h _________h _________h    _________i _________i _________i
        """
    if solve(9, actual, expected, WWing()):
        return
    assert False

#
# def test_sudoku_explicit_w_wing_cols0():
#     actual = \
#         f"""
#         _________a _________a _________a    _________b _________b _________b    _________c _________c _________c
#         _________a _________a _________a    _________b _________b _________b    _________c _________c _________c
#         _________a _________a _________a    _________b _________b _________b    _________c _________c _________c
#
#         _________d _________d _________d    _________e _________e _________e    _________f _________f _________f
#         _________d _________d _________d    _________e _________e _________e    _________f _________f _________f
#         _________d _________d _________d    _________e _________e _________e    _________f _________f _________f
#
#         _________g _________g _________g    _________h _________h _________h    _________i _________i _________i
#         _________g _________g _________g    _________h _________h _________h    _________i _________i _________i
#         _________g _________g _________g    _________h _________h _________h    _________i _________i _________i
#         """
#
#     expected = \
#         f"""
#         _________a _________a _________a    _________b _________b _________b    _________c _________c _________c
#         _________a _________a _________a    _________b _________b _________b    _________c _________c _________c
#         _________a _________a _________a    _________b _________b _________b    _________c _________c _________c
#
#         _________d _________d _________d    _________e _________e _________e    _________f _________f _________f
#         _________d _________d _________d    _________e _________e _________e    _________f _________f _________f
#         _________d _________d _________d    _________e _________e _________e    _________f _________f _________f
#
#         _________g _________g _________g    _________h _________h _________h    _________i _________i _________i
#         _________g _________g _________g    _________h _________h _________h    _________i _________i _________i
#         _________g _________g _________g    _________h _________h _________h    _________i _________i _________i
#         """
#     if solve(9, actual, expected, WWing()):
#         return
#     assert False
#
# def test_sudoku_explicit_w_wing_cols1():
#     actual = \
#         f"""
#         _________a _________a _________a    _________b _________b _________b    _________c _________c _________c
#         _________a _________a _________a    _________b _________b _________b    _________c _________c _________c
#         _________a _________a _________a    _________b _________b _________b    _________c _________c _________c
#
#         _________d _________d _________d    _________e _________e _________e    _________f _________f _________f
#         _________d _________d _________d    _________e _________e _________e    _________f _________f _________f
#         _________d _________d _________d    _________e _________e _________e    _________f _________f _________f
#
#         _________g _________g _________g    _________h _________h _________h    _________i _________i _________i
#         _________g _________g _________g    _________h _________h _________h    _________i _________i _________i
#         _________g _________g _________g    _________h _________h _________h    _________i _________i _________i
#         """
#
#     expected = \
#         f"""
#         _________a _________a _________a    _________b _________b _________b    _________c _________c _________c
#         _________a _________a _________a    _________b _________b _________b    _________c _________c _________c
#         _________a _________a _________a    _________b _________b _________b    _________c _________c _________c
#
#         _________d _________d _________d    _________e _________e _________e    _________f _________f _________f
#         _________d _________d _________d    _________e _________e _________e    _________f _________f _________f
#         _________d _________d _________d    _________e _________e _________e    _________f _________f _________f
#
#         _________g _________g _________g    _________h _________h _________h    _________i _________i _________i
#         _________g _________g _________g    _________h _________h _________h    _________i _________i _________i
#         _________g _________g _________g    _________h _________h _________h    _________i _________i _________i
#         """
#     if solve(9, actual, expected, WWing()):
#         return
#     assert False
