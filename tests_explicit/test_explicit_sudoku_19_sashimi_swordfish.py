from tech import tech
from tests_explicit.test_small_explicit import solve
import pytest


@pytest.mark.skip("SKIPPED")
def test_sudoku_explicit_shashimi_sword_fish_1_fin_cols():
    actual = \
        f"""
        _______8_a _________a _________a    _2_______b _________b _________b    ______7__c _________c _________c
        1________a _________a _________a    __3__67__b _________b _________b    ____5____c _________c _________c
        ____5____a _________a _________a    __3__678_b _________b _________b    1________c _________c _________c
        
        __3______d _________d _________d    _____67__e _________e _________e    _2_______f _________f _________f
        ______7__d _________d _________d    1_3______e _________e _________e    _______89f _________f _________f
        _____6__9d _________d _________d    ____5____e _________e _________e    __3______f _________f _________f
        
        ___4_____g _________g _________g    1____6_89h _________h _________h    _______89i _________i _________i
        _2_______g _________g _________g    ___4_____h _________h _________h    _____6___i _________i _________i
        _____6__9g _________g _________g    1_____789h _________h _________h    ___4_____i _________i _________i
        """

    expected = \
        f"""
        _______8_a _________a _________a    _2_______b _________b _________b    ______7__c _________c _________c
        1________a _________a _________a    __3__67__b _________b _________b    ____5____c _________c _________c
        ____5____a _________a _________a    __3__678_b _________b _________b    1________c _________c _________c
        
        __3______d _________d _________d    _____67__e _________e _________e    _2_______f _________f _________f
        ______7__d 12345678_d 12345678_d    1_3______e _________e _________e    _______89f _________f _________f
        _____6__9d _________d _________d    ____5____e _________e _________e    __3______f _________f _________f
        
        ___4_____g _________g _________g    1____6_89h _________h _________h    _______89i _________i _________i
        _2_______g _________g _________g    ___4_____h _________h _________h    _____6___i _________i _________i
        _____6__9g _________g _________g    1_____789h _________h _________h    ___4_____i _________i _________i
        """
    if solve(9, actual, expected, tech.ShashimiSwordFish()):
        return
    assert False


@pytest.mark.skip("SKIPPED")
def test_sudoku_explicit_shashimi_sword_fish_1_fin_rows():
    actual = \
        f"""
        _________a 123456_89a 123456_89a    123456_89b _________b 123456_89b    _________c 123456_89c 123456_89c
        _________a _________a _________a    _________b _________b _________b    _________c _________c _________c
        123456_89a 123456_89a 123456_89a    123456_89b _________b 123456_89b    _________c 123456_89c 123456_89c
        
        _________d _________d _________d    _________e _________e _________e    _________f _________f _________f
        _________d _________d _________d    _________e _________e _________e    _________f _________f _________f
        _________d _________d _________d    _________e _________e _________e    _________f _________f _________f
        
        _________g _________g _________g    _________h _________h _________h    _________i _________i _________i
        123456_89g 123456_89g _________g    123456_89h 123456_89h 123456_89h    _________i 123456_89i 123456_89i
        _________g _________g _________g    _________h _________h _________h    _________i _________i _________i
        """

    expected = \
        f"""
        _________a 123456_89a 123456_89a    123456_89b _________b 123456_89b    _________c 123456_89c 123456_89c
        _________a _________a 123456_89a    _________b _________b _________b    _________c _________c _________c
        123456_89a 123456_89a 123456_89a    123456_89b _________b 123456_89b    _________c 123456_89c 123456_89c
        
        _________d _________d _________d    _________e _________e _________e    _________f _________f _________f
        _________d _________d _________d    _________e _________e _________e    _________f _________f _________f
        _________d _________d _________d    _________e _________e _________e    _________f _________f _________f
        
        123456_89g _________g _________g    _________h _________h _________h    _________i _________i _________i
        123456_89g 123456_89g _________g    123456_89h 123456_89h 123456_89h    _________i 123456_89i 123456_89i
        123456_89g _________g _________g    _________h _________h _________h    _________i _________i _________i
        """
    if solve(9, actual, expected, tech.ShashimiSwordFish()):
        return
    assert False


@pytest.mark.skip("SKIPPED")
def test_sudoku_explicit_shashimi_sword_fish_2_fin_cols():
    actual = \
        f"""
        _________a 1________a _________a    _________b _________b _________b    _________c _______8_c _________c
        _________a _____6__9a _________a    _________b 1234_6789b _________b    _________c _________c _________c
        _________a ______78_a _________a    _________b 1234_6789b _________b    _________c _________c _________c
        
        _________d ___4__789d _________d    _________e 1234_6789e _________e    _________f 1________f _________f
        _________d __3______d _________d    _________e 1234_6789e _________e    _________f 1234_6789f _________f
        _________d ___4__789d _________d    _________e 1234_6789e _________e    _________f 1234_6789f _________f
        
        _________g ___456_8_g _________g    _________h ____56_8_h _________h    _________i ___45___9i _________i
        _________g _2_______g _________g    _________h ___4_____h _________h    _________i 1234_6789i _________i
        _________g ___456_8_g _________g    _________h ____56___h _________h    _________i ___45_7__i _________i
        """

    expected = \
        f"""
        _________a 1________a _________a    _________b _________b _________b    1234_6789c _______8_c 1234_6789c
        _________a _____6__9a _________a    _________b 1234_6789b _________b    _________c _________c _________c
        _________a ______78_a _________a    _________b 1234_6789b _________b    _________c _________c _________c
        
        _________d ___4__789d _________d    _________e 1234_6789e _________e    _________f 1________f _________f
        _________d __3______d _________d    _________e 1234_6789e _________e    _________f 1234_6789f _________f
        _________d ___4__789d _________d    _________e 1234_6789e _________e    _________f 1234_6789f _________f
        
        _________g ___456_8_g _________g    _________h ____56_8_h _________h    _________i ___45___9i _________i
        _________g _2_______g _________g    _________h ___4_____h _________h    _________i 1234_6789i _________i
        _________g ___456_8_g _________g    _________h ____56___h _________h    _________i ___45_7__i _________i
        """
    if solve(9, actual, expected, tech.ShashimiSwordFish()):
        return
    assert False

