from tech import tech
from techniques.NakedPair import NakedPair
from tests_explicit.test_small_explicit import solve


def test_sudoku_explicit_naked_pair_cols():
    actual = \
        f"""
    123456789a 123456789a 123456789a    123456789b 123456789b 123456789b    123456789c 123456789c 123456789c 
    123456789a 123456789a 123456789a    123456789b 123456789b 123456789b    123456789c 123456789c 123456789c 
    123456789a 123456789a 123456789a    123456789b 123456789b 123456789b    123456789c 123456789c 123456789c 
    
    123456789d 123456789d 123456789d    123456789e _______89e 123456789e    123456789f 123456789f 123456789f 
    123456789d 123456789d 123456789d    123456789e 123456789e 123456789e    123456789f 123456789f 123456789f 
    123456789d 123456789d 123456789d    123456789e 123456789e 123456789e    123456789f 123456789f 123456789f 
    
    123456789g 123456789g 123456789g    123456789h 123456789h 123456789h    123456789i 123456789i 123456789i 
    123456789g 123456789g 123456789g    123456789h _______89h 123456789h    123456789i 123456789i 123456789i 
    123456789g 123456789g 123456789g    123456789h 123456789h 123456789h    123456789i 123456789i 123456789i 
    """

    expected = \
        f"""
    123456789a 123456789a 123456789a    123456789b 1234567__b 123456789b    123456789c 123456789c 123456789c 
    123456789a 123456789a 123456789a    123456789b 1234567__b 123456789b    123456789c 123456789c 123456789c 
    123456789a 123456789a 123456789a    123456789b 1234567__b 123456789b    123456789c 123456789c 123456789c 
    
    123456789d 123456789d 123456789d    123456789e _______89e 123456789e    123456789f 123456789f 123456789f 
    123456789d 123456789d 123456789d    123456789e 1234567__e 123456789e    123456789f 123456789f 123456789f 
    123456789d 123456789d 123456789d    123456789e 1234567__e 123456789e    123456789f 123456789f 123456789f 
    
    123456789g 123456789g 123456789g    123456789h 1234567__h 123456789h    123456789i 123456789i 123456789i 
    123456789g 123456789g 123456789g    123456789h _______89h 123456789h    123456789i 123456789i 123456789i 
    123456789g 123456789g 123456789g    123456789h 1234567__h 123456789h    123456789i 123456789i 123456789i 
    """
    if solve(9, actual, expected, NakedPair()):
        return
    assert False


def test_sudoku_explicit_naked_pair_fences():
    actual = \
        f"""
    123456789a 123456789a 123456789a    123456789b 123456789b 123456789b    123456789c 123456789c 123456789c 
    123456789a 123456789a 123456789a    123456789b 123456789b 123456789b    123456789c 123456789c 123456789c 
    123456789a 123456789a 123456789a    123456789b 123456789b 123456789b    123456789c 123456789c 123456789c 
    
    123456789d 123456789d 123456789d    123456789e _______89e 123456789e    123456789f 123456789f 123456789f 
    123456789d 123456789d 123456789d    123456789e 123456789e 123456789e    123456789f 123456789f 123456789f 
    123456789d 123456789d 123456789d    123456789e 123456789e _______89e    123456789f 123456789f 123456789f 
    
    123456789g 123456789g 123456789g    123456789h 123456789h 123456789h    123456789i 123456789i 123456789i 
    123456789g 123456789g 123456789g    123456789h 123456789h 123456789h    123456789i 123456789i 123456789i 
    123456789g 123456789g 123456789g    123456789h 123456789h 123456789h    123456789i 123456789i 123456789i 
    """

    expected = \
        f"""
    123456789a 123456789a 123456789a    123456789b 123456789b 123456789b    123456789c 123456789c 123456789c 
    123456789a 123456789a 123456789a    123456789b 123456789b 123456789b    123456789c 123456789c 123456789c 
    123456789a 123456789a 123456789a    123456789b 123456789b 123456789b    123456789c 123456789c 123456789c 
    
    123456789d 123456789d 123456789d    1234567__e _______89e 1234567__e    123456789f 123456789f 123456789f 
    123456789d 123456789d 123456789d    1234567__e 1234567__e 1234567__e    123456789f 123456789f 123456789f 
    123456789d 123456789d 123456789d    1234567__e 1234567__e _______89e    123456789f 123456789f 123456789f 
    
    123456789g 123456789g 123456789g    123456789h 123456789h 123456789h    123456789i 123456789i 123456789i 
    123456789g 123456789g 123456789g    123456789h 123456789h 123456789h    123456789i 123456789i 123456789i 
    123456789g 123456789g 123456789g    123456789h 123456789h 123456789h    123456789i 123456789i 123456789i 
    """
    if solve(9, actual, expected, NakedPair()):
        return
    assert False


def test_sudoku_explicit_naked_pair_rows():
    actual = \
        f"""
    123456789a 123456789a 123456789a    123456789b 123456789b 123456789b    123456789c 123456789c 123456789c 
    123456789a 123456789a 123456789a    123456789b 123456789b 123456789b    123456789c 123456789c 123456789c 
    123456789a 123456789a 123456789a    123456789b 123456789b 123456789b    123456789c 123456789c 123456789c 
    
    123456789d 123456789d 123456789d    123456789e _______89e 123456789e    _______89f 123456789f 123456789f 
    123456789d 123456789d 123456789d    123456789e 123456789e 123456789e    123456789f 123456789f 123456789f 
    123456789d 123456789d 123456789d    123456789e 123456789e 123456789e    123456789f 123456789f 123456789f 
    
    123456789g 123456789g 123456789g    123456789h 123456789h 123456789h    123456789i 123456789i 123456789i 
    123456789g 123456789g 123456789g    123456789h 123456789h 123456789h    123456789i 123456789i 123456789i 
    123456789g 123456789g 123456789g    123456789h 123456789h 123456789h    123456789i 123456789i 123456789i 
    """

    expected = \
        f"""
    123456789a 123456789a 123456789a    123456789b 123456789b 123456789b    123456789c 123456789c 123456789c 
    123456789a 123456789a 123456789a    123456789b 123456789b 123456789b    123456789c 123456789c 123456789c 
    123456789a 123456789a 123456789a    123456789b 123456789b 123456789b    123456789c 123456789c 123456789c 
    
    1234567__d 1234567__d 1234567__d    1234567__e _______89e 1234567__e    _______89f 1234567__f 1234567__f 
    123456789d 123456789d 123456789d    123456789e 123456789e 123456789e    123456789f 123456789f 123456789f 
    123456789d 123456789d 123456789d    123456789e 123456789e 123456789e    123456789f 123456789f 123456789f 
    
    123456789g 123456789g 123456789g    123456789h 123456789h 123456789h    123456789i 123456789i 123456789i 
    123456789g 123456789g 123456789g    123456789h 123456789h 123456789h    123456789i 123456789i 123456789i 
    123456789g 123456789g 123456789g    123456789h 123456789h 123456789h    123456789i 123456789i 123456789i 
    """
    if solve(9, actual, expected, NakedPair()):
        return
    assert False
