from pytest import mark
from techniques.HiddenUniqueRectangle import HiddenUniqueRectangle
from tests_explicit.test_small_explicit import solve


def test_sudoku_4x4_hur_row_ne():
    if solve(4,
             f"""
            _234c 1234c   1234d _234d
            ____c 12__c   1234d ____d

            ____a ____a   _234b ____b
            ____a ____a   _234b ____b
            """,
             f"""
            _234c 1234c   1_34d _234d
            ____c 12__c   1234d ____d

            ____a ____a   _234b ____b
            ____a ____a   _234b ____b
            """, HiddenUniqueRectangle()):
        return
    assert False


def test_sudoku_4x4_hur_row_ne_control():
    if solve(4,
             f"""
            _234c 1234c   1234d _234d
            ____c ____c   1234d ____d

            ____a ____a   _234b ____b
            12__a ____a   _234b ____b
            """,
             None, HiddenUniqueRectangle()):
        return
    assert False


def test_sudoku_4x4_hur_row_nw():
    if solve(4,
             f"""
            1234d _234d  _234c 1234c
            1234d ____d  ____c 12__c   

            _234b ____b  ____a ____a   
            _234b ____b  ____a ____a
            """,
             f"""
            1_34d _234d  _234c 1234c
            1234d ____d  ____c 12__c   

            _234b ____b  ____a ____a   
            _234b ____b  ____a ____a  
            """, HiddenUniqueRectangle()):
        return
    assert False


def test_sudoku_4x4_hur_row_nw_control():
    if solve(4,
             f"""
            1234d _234d  _234c 1234c
            _234d ____d  ____c 12__c   

            1234b ____b  ____a 12__a   
            _234b ____b  ____a ____a
            """, None, HiddenUniqueRectangle()):
        return
    assert False


def test_sudoku_4x4_hur_row_se():
    if solve(4,
             f"""
            ____a ____a   _234b ____b
            ____a ____a   _234b ____b

            ____c 12__c   1234d ____d
            _234c 1234c   1234d _234d
            """,
             f"""
            ____a ____a   _234b ____b
            ____a ____a   _234b ____b

            ____c 12__c   1234d ____d
            _234c 1234c   1_34d _234d
            """, HiddenUniqueRectangle()):
        return
    assert False


def test_sudoku_4x4_hur_row_se_control():
    if solve(4,
             f"""
            ____a ____a   1234b ____b
            ____a ____a   _234b ____b

            ____c 12__c   1234d ____d
            _234c 1234c   1234d _234d
            """, None, HiddenUniqueRectangle()):
        return
    assert False


def test_sudoku_4x4_hur_row_sw():
    if solve(4,
             f"""
            _234b ____b  ____a ____a   
            _234b ____b  ____a ____a   

            1234d ____d  ____c 12__c   
            1234d _234d  _234c 1234c   
            """,
             f"""
            _234b ____b  ____a ____a   
            _234b ____b  ____a ____a   

            1234d ____d  ____c 12__c   
            1_34d _234d  _234c 1234c
            """, HiddenUniqueRectangle()):
        return
    assert False


def test_sudoku_4x4_hur_row_sw_control():
    if solve(4,
             f"""
            _234b ____b  ____a ____a   
            _234b ____b  ____a ____a   

            1234d 12__d  ____c ____c   
            1234d _234d  _234c 1234c
            """, None, HiddenUniqueRectangle()):
        return
    assert False


@mark.skip("EXPLICITLY")
def test_sudoku_4x4_hur_col_ne():
    if solve(4,
             f"""
            ____a ____a   ____b ____b
            ____a ____a   ____b ____b

            ____c ____c   ____d ____d
            ____c ____c   ____d ____d
            """,
             f"""
            ____a ____a   ____b ____b
            ____a ____a   ____b ____b

            ____c ____c   ____d ____d
            ____c ____c   ____d ____d
            """, HiddenUniqueRectangle()):
        return
    assert False


@mark.skip("EXPLICITLY")
def test_sudoku_4x4_hur_col_ne_control():
    if solve(4,
             f"""
            ____a ____a   ____b ____b
            ____a ____a   ____b ____b

            ____c ____c   ____d ____d
            ____c ____c   ____d ____d
            """, None, HiddenUniqueRectangle()):
        return
    assert False


@mark.skip("EXPLICITLY")
def test_sudoku_4x4_hur_col_nw():
    if solve(4,
             f"""
            ____a ____a   ____b ____b
            ____a ____a   ____b ____b

            ____c ____c   ____d ____d
            ____c ____c   ____d ____d
            """,
             f"""
            ____a ____a   ____b ____b
            ____a ____a   ____b ____b

            ____c ____c   ____d ____d
            ____c ____c   ____d ____d
            """, HiddenUniqueRectangle()):
        return
    assert False


@mark.skip("EXPLICITLY")
def test_sudoku_4x4_hur_col_nw_control():
    if solve(4,
             f"""
            ____a ____a   ____b ____b
            ____a ____a   ____b ____b

            ____c ____c   ____d ____d
            ____c ____c   ____d ____d
            """, None, HiddenUniqueRectangle()):
        return
    assert False


@mark.skip("EXPLICITLY")
def test_sudoku_4x4_hur_col_se():
    if solve(4,
             f"""
            ____a ____a   ____b ____b
            ____a ____a   ____b ____b

            ____c ____c   ____d ____d
            ____c ____c   ____d ____d
            """,
             f"""
            ____a ____a   ____b ____b
            ____a ____a   ____b ____b

            ____c ____c   ____d ____d
            ____c ____c   ____d ____d
            """, HiddenUniqueRectangle()):
        return
    assert False


@mark.skip("EXPLICITLY")
def test_sudoku_4x4_hur_col_se_control():
    if solve(4,
             f"""
            ____a ____a   ____b ____b
            ____a ____a   ____b ____b

            ____c ____c   ____d ____d
            ____c ____c   ____d ____d
            """, None, HiddenUniqueRectangle()):
        return
    assert False


@mark.skip("EXPLICITLY")
def test_sudoku_4x4_hur_col_sw():
    if solve(4,
             f"""
            ____a ____a   ____b ____b
            ____a ____a   ____b ____b

            ____c ____c   ____d ____d
            ____c ____c   ____d ____d
            """,
             f"""
            ____a ____a   ____b ____b
            ____a ____a   ____b ____b

            ____c ____c   ____d ____d
            ____c ____c   ____d ____d
            """, HiddenUniqueRectangle()):
        return
    assert False


@mark.skip("EXPLICITLY")
def test_sudoku_4x4_hur_col_sw_control():
    if solve(4,
             f"""
            ____a ____a   ____b ____b
            ____a ____a   ____b ____b

            ____c ____c   ____d ____d
            ____c ____c   ____d ____d
            """, None, HiddenUniqueRectangle()):
        return
    assert False


def test_sudoku_explicit_hidden_unique_rectangle_north_east_col_chute():
    actual = \
        f"""
        _________a _________a _________a    ____5____b _________b _________b    _________c _________c _________c
        _________a _________a _________a    _____6___b _________b _________b    _________c _________c _________c
        _________a _________a _________a    _2______9b _________b _________b    _________c _________c _________c
        
        _________d _________d _________d    ___4_____e _________e _________e    _________f _________f _________f
        _________d _________d _________d    1_3____8_e _________e _________e    _________f _________f _________f
        _________d _________d _________d    __3___78_e __3___7__e _________e    _________f _________f _________f
        
        _________g _________g _________g    _2______9h _________h _________h    _________i _________i _________i
        _________g _________g _________g    1_3______h _________h _________h    _________i _________i _________i
        1_3______g _2_______g ________9g    1_3___7__h 1_3___7__h ___4_____h    _____6___i ____5____i _______8_i
        """

    expected = \
        f"""
        _________a _________a _________a    ____5____b _________b _________b    _________c _________c _________c
        _________a _________a _________a    _____6___b _________b _________b    _________c _________c _________c
        _________a _________a _________a    _2______9b _________b _________b    _________c _________c _________c
        
        _________d _________d _________d    ___4_____e _________e _________e    _________f _________f _________f
        _________d _________d _________d    1_3____8_e _________e _________e    _________f _________f _________f
        _________d _________d _________d    __3___78_e __3___7__e _________e    _________f _________f _________f
        
        _________g _________g _________g    _2______9h _________h _________h    _________i _________i _________i
        _________g _________g _________g    1_3______h _________h _________h    _________i _________i _________i
        1_3______g _2_______g ________9g    1_____7__h 1_3___7__h ___4_____h    _____6___i ____5____i _______8_i
        """
    if solve(9, actual, expected, HiddenUniqueRectangle()):
        return
    assert False
@mark.skip("skipped")

def test_sudoku_explicit_hidden_unique_rectangle_north_east_row_chute():
    actual = \
        f"""
        _________a _________a _________a    _________b _________b _2___6___b    _________c _________c _________c
        _________a _________a _________a    _________b _________b _______8_b    _________c _________c _________c
        _________a _________a _________a    _________b _________b ____5____b    _________c _________c _________c
        
        _________d _________d _________d    _________e _________e _2_4_6___e    ___4_6___f _________f _________f
        _2_______d 1________d _______8_d    ______7__e __3______e ___4_6___e    ___456___f ____56___f ________9f
        _________d _________d _________d    _________e _________e 1________e    _________f _________f _________f
        
        _________g _________g _________g    _________h _________h __3______h    _________i _________i _________i
        _________g _________g _________g    _________h _________h ________9h    _________i _________i _________i
        _________g _________g _________g    _________h _________h ______7__h    _________i _________i _________i
        """

    expected = \
        f"""
        _________a _________a _________a    _________b _________b _2___6___b    _________c _________c _________c
        _________a _________a _________a    _________b _________b _______8_b    _________c _________c _________c
        _________a _________a _________a    _________b _________b ____5____b    _________c _________c _________c
        
        _________d _________d _________d    _________e _________e _2_4_6___e    ___4_6___f _________f _________f
        _2_______d 1________d _______8_d    ______7__e __3______e ___4_____e    ___456___f ____56___f ________9f
        _________d _________d _________d    _________e _________e 1________e    _________f _________f _________f
        
        _________g _________g _________g    _________h _________h __3______h    _________i _________i _________i
        _________g _________g _________g    _________h _________h ________9h    _________i _________i _________i
        _________g _________g _________g    _________h _________h ______7__h    _________i _________i _________i
        """
    if solve(9, actual, expected, HiddenUniqueRectangle()):
        return
    assert False

@mark.skip("skipped")


def test_sudoku_explicit_hidden_unique_rectangle_north_west_col_chute():
    actual = \
        f"""
        _________a _________a _________a    _________b __3______b _________b    _________c _________c _________c
        _________a _________a _________a    _________b _2_____8_b _________b    _________c _________c _________c
        _________a _________a _________a    _________b ___4_____b _________b    _________c _________c _________c
        
        _________d _________d _________d    _________e ____5____e _________e    _________f _________f _________f
        _________d _________d _________d    _____6_8_e _2___6_8_e _________e    _________f _________f _________f
        _________d _________d _________d    _________e ______7__e _________e    _________f _________f _________f
        
        __3______g _2_______g ____5____g    _____678_h _____6_8_h ______78_h    ________9i 1________i ___4_____i
        _________g _________g _________g    _________h ________9h _________h    _________i _________i _________i
        _________g _________g _________g    _________h 1________h _________h    _________i _________i _________i
        """

    expected = \
        f"""
        _________a _________a _________a    _________b __3______b _________b    _________c _________c _________c
        _________a _________a _________a    _________b _2_____8_b _________b    _________c _________c _________c
        _________a _________a _________a    _________b ___4_____b _________b    _________c _________c _________c
        
        _________d _________d _________d    _________e ____5____e _________e    _________f _________f _________f
        _________d _________d _________d    _____6_8_e _2___6_8_e _________e    _________f _________f _________f
        _________d _________d _________d    _________e ______7__e _________e    _________f _________f _________f
        
        
        __3______g _2_______g ____5____g    _____678_h _____6___h ______78_h    ________9i 1________i ___4_____i
        _________g _________g _________g    _________h ________9h _________h    _________i _________i _________i
        _________g _________g _________g    _________h 1________h _________h    _________i _________i _________i
        """
    if solve(9, actual, expected, HiddenUniqueRectangle()):
        return
    assert False

@mark.skip("skipped")

def test_sudoku_explicit_hidden_unique_rectangle_north_west_row_chute():
    actual = \
        f"""
        _________a _________a _________a    _________b _________b _________b    _23456789c _________c _________c
        _________a _________a _________a    _________b _________b _________b    _23456789c _________c _________c
        _________a _________a _________a    _________b _________b _________b    _23456789c _________c _________c
        
        _________d _________d 12_______d    _________e _________e _________e    _________f _________f _________f
        _________d _________d _________d    _________e _________e _________e    _23456789f _________f _________f
        _23456789d _23456789d _________d    _23456789e _23456789e _23456789e    _________f _23456789f _23456789f
        
        _________g _________g _________g    _________h _________h _________h    _23456789i _________i _________i
        _________g _________g _________g    _________h _________h _________h    _23456789i _________i _________i
        _________g _________g _________g    _________h _________h _________h    _23456789i _________i _________i
        """

    expected = \
        f"""
        _________a _________a _________a    _________b _________b _________b    _23456789c _________c _________c
        _________a _________a _________a    _________b _________b _________b    _23456789c _________c _________c
        _________a _________a _________a    _________b _________b _________b    _23456789c _________c _________c
        
        _________d _________d 12_______d    _________e _________e _________e    _________f _________f _________f
        _________d _________d _________d    _________e _________e _________e    _23456789f _________f _________f
        _23456789d _23456789d _________d    _23456789e _23456789e _23456789e    1_3456789f _23456789f _23456789f
        
        _________g _________g _________g    _________h _________h _________h    _23456789i _________i _________i
        _________g _________g _________g    _________h _________h _________h    _23456789i _________i _________i
        _________g _________g _________g    _________h _________h _________h    _23456789i _________i _________i
        """
    if solve(9, actual, expected, HiddenUniqueRectangle()):
        return
    assert False

@mark.skip("skipped")

def test_sudoku_explicit_hidden_unique_rectangle_south_east_row_chute():
    actual = \
        f"""
        _________a _________a _________a    _________b _________b _________b    _______8_c _________c _________c
        _________a _________a _________a    _________b _________b _________b    __3______c _________c _________c
        _________a _________a _________a    _________b _________b _________b    ____5____c _________c _________c
        
        ____5____d _______8_d 1_3___7__d    1_______9e _2_______e _____6___e    1_____7_9f ___4_____f __3_____9f
        _________d _________d _________d    _________e _________e _________e    _2_______f _________f _________f
        _________d _________d 1_____7__d    _________e _________e _________e    1_____7_9f _________f _________f
        
        _________g _________g _________g    _________h _________h _________h    ___4_____i _________i _________i
        _________g _________g _________g    _________h _________h _________h    1_______9i _________i _________i
        _________g _________g _________g    _________h _________h _________h    _____6___i _________i _________i
        """

    expected = \
        f"""
        # _________a _________a _________a    _________b _________b _________b    _______8_c _________c _________c
        # _________a _________a _________a    _________b _________b _________b    __3______c _________c _________c
        # _________a _________a _________a    _________b _________b _________b    ____5____c _________c _________c
        #
        # ____5____d _______8_d 1_3___7__d    1_______9e _2_______e _____6___e    ______7_9f ___4_____f __3_____9f
        # _________d _________d _________d    _________e _________e _________e    _2_______f _________f _________f
        # _________d _________d 1_____7__d    _________e _________e _________e    1_____7_9f _________f _________f
        #
        # _________g _________g _________g    _________h _________h _________h    ___4_____i _________i _________i
        # _________g _________g _________g    _________h _________h _________h    1_______9i _________i _________i
        # _________g _________g _________g    _________h _________h _________h    _____6___i _________i _________i
        """
    if solve(9, actual, expected, HiddenUniqueRectangle()):
        return
    assert False

@mark.skip("skipped")

def test_sudoku_explicit_hidden_unique_rectangle_south_west_col_chute():
    actual = \
        f"""
        _________a _________a _________a    _________b _________b _________b    _________c _________c 1________c
        _________a _________a _________a    _________b _________b _________b    _________c _________c __3______c
        __34_____a 1________a _____6___a    ________9b ______7__b __3__5___b    _______8_c _2_45____c _2__5____c
        
        _________d _________d _________d    _________e _________e _________e    _________f _2__5____f _2__5_7__f
        _________d _________d _________d    _________e _________e _________e    _________f _________f ___45____f
        _________d _________d _________d    _________e _________e _________e    _________f _________f ___4__7__f
        
        _________g _________g _________g    _________h _________h _________h    _________i _________i _____6__9i
        _________g _________g _________g    _________h _________h _________h    _________i _________i _______8_i
        _________g _________g _________g    _________h _________h _________h    _________i _________i _____6__9i
        """

    expected = \
        f"""
        _________a _________a _________a    _________b _________b _________b    _________c _________c 1________c
        _________a _________a _________a    _________b _________b _________b    _________c _________c __3______c
        __34_____a 1________a _____6___a    ________9b ______7__b __3__5___b    _______8_c _2_45____c _2_______c
        
        _________d _________d _________d    _________e _________e _________e    _________f _2__5____f _2__5_7__f
        _________d _________d _________d    _________e _________e _________e    _________f _________f ___45____f
        _________d _________d _________d    _________e _________e _________e    _________f _________f ___4__7__f
        
        _________g _________g _________g    _________h _________h _________h    _________i _________i _____6__9i
        _________g _________g _________g    _________h _________h _________h    _________i _________i _______8_i
        _________g _________g _________g    _________h _________h _________h    _________i _________i _____6__9i
        """
    if solve(9, actual, expected, HiddenUniqueRectangle()):
        return
    assert False

@mark.skip("skipped")
def test_sudoku_explicit_hidden_unique_rectangle_south_west_row_chute():
    actual = \
        f"""
        ___4__67_a __3__6_8_a _2_______a    ___4_6_89b 1__4____9b 1__4____9b    ___4__7__c ____5____c 1_34____9c
        _________a ___4___8_a _________a    _2_4_6_89b _________b _________b    _________c _________c _________c
        _________a _________a _________a    _2_4___89b _________b _________b    _________c _________c _________c
        
        _________d _________d _________d    _2_4_6___e _________e _________e    _________f _________f _________f
        _________d _________d _________d    __3_____9e _________e _________e    _________f _________f _________f
        _________d _________d _________d    ____5____e _________e _________e    _________f _________f _________f
        
        _________g _________g _________g    1________h _________h _________h    _________i _________i _________i
        _________g _________g _________g    __34____9h _________h _________h    _________i _________i _________i
        _________g _________g _________g    ______7__h _________h _________h    _________i _________i _________i
        """

    expected = \
        f"""
        ___4__67_a __3__6_8_a _2_______a    _____6_89b 1__4____9b 1__4____9b    ___4__7__c ____5____c 1_34____9c
        _________a ___4___8_a _________a    _2_4_6_89b _________b _________b    _________c _________c _________c
        _________a _________a _________a    _2_4___89b _________b _________b    _________c _________c _________c
        
        _________d _________d _________d    _2_4_6___e _________e _________e    _________f _________f _________f
        _________d _________d _________d    __3_____9e _________e _________e    _________f _________f _________f
        _________d _________d _________d    ____5____e _________e _________e    _________f _________f _________f
        
        _________g _________g _________g    1________h _________h _________h    _________i _________i _________i
        _________g _________g _________g    __34____9h _________h _________h    _________i _________i _________i
        _________g _________g _________g    ______7__h _________h _________h    _________i _________i _________i
        """
    if solve(9, actual, expected, HiddenUniqueRectangle()):
        return
    assert False

