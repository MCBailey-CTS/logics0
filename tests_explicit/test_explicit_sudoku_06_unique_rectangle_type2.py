import pytest

from techniques.UniqueRectangleType2 import UniqueRectangleType2
from tests_explicit.test_small_explicit import solve


def test_sudoku_4x4_ur2_normal_east():
    actual = \
        f"""
        ____a _23_a   123_b 123_b
        ____a _23_a   ____b 123_b
        ____c ____c   ____d ____d
        ____c ____c   ____d ____d
        """
    expected = \
        f"""
        ____a _23_a   _23_b 123_b
        ____a _23_a   _234b 123_b
        ____c ____c   ____d _234d
        ____c ____c   ____d _234d
        """
    if solve(4, actual, expected, UniqueRectangleType2()):
        return
    assert False


def test_sudoku_4x4_ur2_goofy_east():
    actual = \
        f"""
        ____a ____a   ____b ____b
        ____a ____a   12__b 123_b
        ____c ____c   12__d 123_d
        ____c ____c   ____d ____d
        """

    expected = \
        f"""
        ____a ____a   ____b 12_4b
        ____a ____a   12__b 123_b
        ____c ____c   12__d 123_d
        ____c ____c   ____d 12_4d
        """

    if solve(4, actual, expected, UniqueRectangleType2()):
        return

    assert False


def test_sudoku_4x4_ur2_chute_normal_north():
    actual = \
        f"""
        ____a 123_a   ____b ____b
        123_a 123_a   ____b ____b
        12__c 12__c   ____d ____d
        ____c ____c   ____d ____d
        """
    expected = \
        f"""
        12_4a 12__a   ____b ____b
        123_a 123_a   12_4b 12_4b
        12__c 12__c   ____d ____d
        ____c ____c   ____d ____d
        """
    if solve(4, actual, expected, UniqueRectangleType2()):
        return
    assert False


def test_sudoku_4x4_ur2_chute_goofy_north():
    actual = \
        f"""
        ____a 123_a   123_b ____b
        ____a _23_a   _23_b ____b
        ____c ____c   ____d ____d
        ____c ____c   ____d ____d
        """
    expected = \
        f"""
        _234a 123_a   123_b _234b
        ____a _23_a   _23_b ____b
        ____c ____c   ____d ____d
        ____c ____c   ____d ____d
        """
    if solve(4, actual, expected, UniqueRectangleType2()):
        return
    assert False


def test_sudoku_4x4_ur2_chute_normal_west():
    actual = \
        f"""
        ____a ____a   ____b ____b
        ____a ____a   ____b ____b
        123_c 123_c   12__d ____d
        ____c 123_c   12__d ____d
        """
    expected = \
        f"""
        ____a 12_4a   ____b ____b
        ____a 12_4a   ____b ____b
        12__c 123_c   12__d ____d
        12_4c 123_c   12__d ____d
        """
    if solve(4, actual, expected, UniqueRectangleType2()):
        return
    assert False


def test_sudoku_4x4_ur2_chute_goofy_west():
    actual = \
        f"""
        ____a ____a   ____b ____b
        123_a 12__a   ____b ____b
        123_c 12__c   ____d ____d
        ____c ____c   ____d ____d
        """
    expected = \
        f"""
        12_4a ____a   ____b ____b
        123_a 12__a   ____b ____b
        123_c 12__c   ____d ____d
        12_4c ____c   ____d ____d
        """
    if solve(4, actual, expected, UniqueRectangleType2()):
        return

    assert False


def test_sudoku_4x4_ur2_chute_normal_south():
    actual = \
        f"""
        12__a 12__a   ____b ____b
        ____a ____a   ____b ____b
        123_c 123_c   ____d ____d
        123_c ____c   ____d ____d
        """
    expected = \
        f"""
        12__a 12__a   ____b ____b
        ____a ____a   ____b ____b
        123_c 123_c   12_4d 12_4d
        12__c 12_4c   ____d ____d
        """
    if solve(4, actual, expected, UniqueRectangleType2()):
        return
    assert False


def test_sudoku_4x4_ur2_chute_goofy_south():
    actual = \
        f"""
        ____a 12__a   12__b ____b
        ____a 123_a   123_b ____b
        ____c ____c   ____d ____d
        ____c ____c   ____d ____d
        """
    expected = \
        f"""
        ____a 12__a   12__b ____b
        12_4a 123_a   123_b 12_4b
        ____c ____c   ____d ____d
        ____c ____c   ____d ____d
        """
    if solve(4, actual, expected, UniqueRectangleType2()):
        return
    assert False


def test_sudoku_4x4_ur2_normal_east_control():
    actual = \
        f"""
        ____a _23_a   123_b 123_b
        ____a ____a   ____b ____b
        ____c _23_c   ____d 123_d
        ____c ____c   ____d ____d
        """
    expected = None
    if solve(4, actual, expected, UniqueRectangleType2()):
        return
    assert False


def test_sudoku_4x4_ur2_goofy_east_control():
    actual = \
        f"""
        ____a ____a   ____b ____b
        ____a 12__a   ____b 123_b
        ____c 12__c   ____d 123_d
        ____c ____c   ____d ____d
        """

    expected = None

    if solve(4, actual, expected, UniqueRectangleType2()):
        return

    assert False


def test_sudoku_4x4_ur2_chute_normal_north_control():
    actual = \
        f"""
        ____a ____a   123_b ____b
        123_a ____a   123_b ____b
        12__c ____c   12__d ____d
        ____c ____c   ____d ____d
        """
    expected = None
    if solve(4, actual, expected, UniqueRectangleType2()):
        return
    assert False


def test_sudoku_4x4_ur2_chute_goofy_north_control():
    actual = \
        f"""
        ____a 123_a   123_b ____b
        ____a ____a   ____b ____b
        ____c _23_c   ____d ____d
        ____c ____c   _23_d ____d
        """
    expected = None
    if solve(4, actual, expected, UniqueRectangleType2()):
        return
    assert False


def test_sudoku_4x4_ur2_chute_normal_west_control():
    actual = \
        f"""
        ____a ____a   ____b ____b
        ____a ____a   12__b ____b
        123_c 123_c   ____d ____d
        ____c 123_c   12__d ____d
        """
    expected = None
    if solve(4, actual, expected, UniqueRectangleType2()):
        return
    assert False


def test_sudoku_4x4_ur2_chute_goofy_west_control():
    actual = \
        f"""
        ____a ____a   ____b ____b
        123_a ____a   12__b ____b
        123_c ____c   12__d ____d
        ____c ____c   ____d ____d
        """
    expected = None
    if solve(4, actual, expected, UniqueRectangleType2()):
        return

    assert False


def test_sudoku_4x4_ur2_chute_normal_south_control():
    actual = \
        f"""
        12__a 12__a   ____b ____b
        ____a ____a   ____b ____b
        ____c 123_c   123_d ____d
        123_c ____c   ____d ____d
        """
    expected = None
    if solve(4, actual, expected, UniqueRectangleType2()):
        return
    assert False


def test_sudoku_4x4_ur2_chute_goofy_south_control():
    actual = \
        f"""
        ____a 12__a   12__b ____b
        ____a ____a   ____b ____b
        ____c 123_c   123_d ____d
        ____c ____c   ____d ____d
        """
    expected = None
    if solve(4, actual, expected, UniqueRectangleType2()):
        return
    assert False

def test_sudoku_explicit_unique_rectangle_type2_goofy_east():
    actual = \
        f"""
        _________a _________a _________a    _________b _________b _________b    _________c _________c _________c
        _________a _2__5____a _2__5__8_a    _________b _________b _________b    _________c _________c _________c
        _________a _________a _________a    _________b _________b _________b    _________c _________c _________c
        
        _________d _2__5____d _2__5__8_d    _________e _________e _________e    _________f _________f _________f
        _________d _________d _________d    _________e _________e _________e    _________f _________f _________f
        _________d _________d _________d    _________e _________e _________e    _________f _________f _________f
        
        _________g _________g _________g    _________h _________h _________h    _________i _________i _________i
        _________g _________g _________g    _________h _________h _________h    _________i _________i _________i
        _________g _________g _________g    _________h _________h _________h    _________i _________i _________i
        """

    expected = \
        f"""
        _________a _________a 1234567_9a    _________b _________b _________b    _________c _________c _________c
        _________a _2__5____a _2__5__8_a    _________b _________b _________b    _________c _________c _________c
        _________a _________a 1234567_9a    _________b _________b _________b    _________c _________c _________c
        
        _________d _2__5____d _2__5__8_d    _________e _________e _________e    _________f _________f _________f
        _________d _________d 1234567_9d    _________e _________e _________e    _________f _________f _________f
        _________d _________d 1234567_9d    _________e _________e _________e    _________f _________f _________f
        
        _________g _________g 1234567_9g    _________h _________h _________h    _________i _________i _________i
        _________g _________g 1234567_9g    _________h _________h _________h    _________i _________i _________i
        _________g _________g 1234567_9g    _________h _________h _________h    _________i _________i _________i
        """
    if solve(9, actual, expected, UniqueRectangleType2()):
        return
    assert False

def test_sudoku_explicit_unique_rectangle_type2_goofy_north():
    actual = \
        f"""
        _________a _________a __345____a    __345____b _________b _________b    _________c _________c _________c
        _________a _________a __3_5____a    __3_5____b _________b _________b    _________c _________c _________c
        _________a _________a _________a    _________b _________b _________b    _________c _________c _________c
        
        _________d _________d _________d    _________e _________e _________e    _________f _________f _________f
        _________d _________d _________d    _________e _________e _________e    _________f _________f _________f
        _________d _________d _________d    _________e _________e _________e    _________f _________f _________f
        
        _________g _________g _________g    _________h _________h _________h    _________i _________i _________i
        _________g _________g _________g    _________h _________h _________h    _________i _________i _________i
        _________g _________g _________g    _________h _________h _________h    _________i _________i _________i
        """

    expected = \
        f"""
        123_56789a 123_56789a __345____a    __345____b 123_56789b 123_56789b    123_56789c 123_56789c 123_56789c
        _________a _________a __3_5____a    __3_5____b _________b _________b    _________c _________c _________c
        _________a _________a _________a    _________b _________b _________b    _________c _________c _________c
        
        _________d _________d _________d    _________e _________e _________e    _________f _________f _________f
        _________d _________d _________d    _________e _________e _________e    _________f _________f _________f
        _________d _________d _________d    _________e _________e _________e    _________f _________f _________f
        
        _________g _________g _________g    _________h _________h _________h    _________i _________i _________i
        _________g _________g _________g    _________h _________h _________h    _________i _________i _________i
        _________g _________g _________g    _________h _________h _________h    _________i _________i _________i
        """
    if solve(9, actual, expected, UniqueRectangleType2()):
        return
    assert False

def test_sudoku_explicit_unique_rectangle_type2_goofy_south():
    actual = \
        f"""
        _________a _________a _________a    _________b _________b _________b    _________c _________c _________c
        _________a _________a _________a    _________b _________b _________b    _________c _________c _________c
        _________a _________a _________a    _________b _________b _________b    _________c _________c _________c
        
        _________d _________d _________d    _________e _________e _________e    _________f _________f _________f
        _________d _________d _________d    _________e _________e _________e    _________f _________f _________f
        _________d _________d _________d    _________e _________e _________e    _________f _________f _________f
        
        _________g _________g _________g    _________h _________h _________h    _________i _________i _________i
        _________g _________g ______7_9g    ______7_9h _________h _________h    _________i _________i _________i
        _________g _________g ______789g    ______789h _________h _________h    _________i _________i _________i
        """

    expected = \
        f"""
        _________a _________a _________a    _________b _________b _________b    _________c _________c _________c
        _________a _________a _________a    _________b _________b _________b    _________c _________c _________c
        _________a _________a _________a    _________b _________b _________b    _________c _________c _________c
        
        _________d _________d _________d    _________e _________e _________e    _________f _________f _________f
        _________d _________d _________d    _________e _________e _________e    _________f _________f _________f
        _________d _________d _________d    _________e _________e _________e    _________f _________f _________f
        
        _________g _________g _________g    _________h _________h _________h    _________i _________i _________i
        _________g _________g ______7_9g    ______7_9h _________h _________h    _________i _________i _________i
        1234567_9g 1234567_9g ______789g    ______789h 1234567_9h 1234567_9h    1234567_9i 1234567_9i 1234567_9i
        """
    if solve(9, actual, expected, UniqueRectangleType2()):
        return
    assert False

def test_sudoku_explicit_unique_rectangle_type2_goofy_west():
    actual = \
        f"""
        _________a _________a _________a    _________b _________b _________b    _________c _________c _________c
        _________a _________a _________a    _________b _________b _________b    _________c _________c _________c
        _________a _________a _________a    _________b _________b _________b    _________c _________c _________c
        
        _________d _________d _________d    _________e _________e _________e    _________f _________f _________f
        _________d 123______d 12_______d    _________e _________e _________e    _________f _________f _________f
        _________d _________d _________d    _________e _________e _________e    _________f _________f _________f
        
        _________g 123______g 12_______g    _________h _________h _________h    _________i _________i _________i
        _________g _________g _________g    _________h _________h _________h    _________i _________i _________i
        _________g _________g _________g    _________h _________h _________h    _________i _________i _________i
        """

    expected = \
        f"""
        _________a 12_456789a _________a    _________b _________b _________b    _________c _________c _________c
        _________a 12_456789a _________a    _________b _________b _________b    _________c _________c _________c
        _________a 12_456789a _________a    _________b _________b _________b    _________c _________c _________c
        
        _________d 12_456789d _________d    _________e _________e _________e    _________f _________f _________f
        _________d 123______d 12_______d    _________e _________e _________e    _________f _________f _________f
        _________d 12_456789d _________d    _________e _________e _________e    _________f _________f _________f
        
        _________g 123______g 12_______g    _________h _________h _________h    _________i _________i _________i
        _________g 12_456789g _________g    _________h _________h _________h    _________i _________i _________i
        _________g 12_456789g _________g    _________h _________h _________h    _________i _________i _________i
        """
    if solve(9, actual, expected, UniqueRectangleType2()):
        return
    assert False

def test_sudoku_explicit_unique_rectangle_type2_normal_east():
    actual = \
        f"""
        _________a _________a _________a    _________b _________b _________b    _________c _________c _________c
        _________a _________a _________a    _________b _________b _________b    _________c _________c _________c
        _________a _________a _________a    _________b _________b _________b    _________c _________c _________c
        
        _________d _________d 12_______d    _________e _________e _________e    _________f _________f 123______f
        _________d _________d _________d    _________e _________e _________e    _________f _________f _________f
        _________d _________d 12_______d    _________e _________e _________e    _________f _________f 123______f
        
        _________g _________g _________g    _________h _________h _________h    _________i _________i _________i
        _________g _________g _________g    _________h _________h _________h    _________i _________i _________i
        _________g _________g _________g    _________h _________h _________h    _________i _________i _________i
        """

    expected = \
        f"""
        _________a _________a _________a    _________b _________b _________b    _________c _________c 12_456789c
        _________a _________a _________a    _________b _________b _________b    _________c _________c 12_456789c
        _________a _________a _________a    _________b _________b _________b    _________c _________c 12_456789c
        
        _________d _________d 12_______d    _________e _________e _________e    12_456789f 12_456789f 123______f
        _________d _________d _________d    _________e _________e _________e    12_456789f 12_456789f 12_456789f
        _________d _________d 12_______d    _________e _________e _________e    12_456789f 12_456789f 123______f
        
        _________g _________g _________g    _________h _________h _________h    _________i _________i 12_456789i
        _________g _________g _________g    _________h _________h _________h    _________i _________i 12_456789i
        _________g _________g _________g    _________h _________h _________h    _________i _________i 12_456789i
        """
    if solve(9, actual, expected, UniqueRectangleType2()):
        return
    assert False

def test_sudoku_explicit_unique_rectangle_type2_normal_north():
    actual = \
        f"""
        _________a _________a _________a   _________b _________b _________b    _________c _________c _________c
        _________a _________a _________a   _________b _________b _________b    _________c _________c _________c
        _________a _________a _________a   _________b _________b _________b    1_3____8_c 1_3____8_c _________c
        
        _________d _________d _________d   _________e _________e _________e    _________f _________f _________f
        _________d _________d _________d   _________e _________e _________e    _________f _________f _________f
        _________d _________d _________d   _________e _________e _________e    _________f _________f _________f
        
        _________g _________g _________g   _________h _________h _________h    _________i _________i _________i
        _________g _________g _________g   _________h _________h _________h    _________i _________i _________i
        _________g _________g _________g   _________h _________h _________h    __3____8_i __3____8_i _________i
        """

    expected = \
        f"""
        _________a _________a _________a   _________b _________b _________b    _23456789c _23456789c _23456789c
        _________a _________a _________a   _________b _________b _________b    _23456789c _23456789c _23456789c
        _23456789a _23456789a _23456789a   _23456789b _23456789b _23456789b    1_3____8_c 1_3____8_c _23456789c
        _________d _________d _________d   _________e _________e _________e    _________f _________f _________f
        _________d _________d _________d   _________e _________e _________e    _________f _________f _________f
        _________d _________d _________d   _________e _________e _________e    _________f _________f _________f
        _________g _________g _________g   _________h _________h _________h    _________i _________i _________i
        _________g _________g _________g   _________h _________h _________h    _________i _________i _________i
        _________g _________g _________g   _________h _________h _________h    __3____8_i __3____8_i _________i
        """
    if solve(9, actual, expected, UniqueRectangleType2()):
        return
    assert False

def test_sudoku_explicit_unique_rectangle_type2_normal_south():
    actual = \
        f"""
        _________a _________a _________a    _________b _________b _________b    _________c _________c _________c
        _________a _________a _________a    _________b _________b _________b    _________c _________c _________c
        _________a _________a _________a    _________b _________b _________b    _________c _________c _________c
        
        _________d _________d _________d    _________e _________e _________e    _________f _________f _________f
        _________d _________d _________d    _________e _________e _________e    _________f _________f _________f
        _________d _________d _________d    12_______e _________e 12_______e    _________f _________f _________f
        
        _________g _________g _________g    _________h _________h _________h    _________i _________i _________i
        _________g _________g _________g    _________h _________h _________h    _________i _________i _________i
        _________g _________g _________g    12_4_____h _________h 12_4_____h    _________i _________i _________i
        """

    expected = \
        f"""
        _________a _________a _________a    _________b _________b _________b    _________c _________c _________c
        _________a _________a _________a    _________b _________b _________b    _________c _________c _________c
        _________a _________a _________a    _________b _________b _________b    _________c _________c _________c
        
        _________d _________d _________d    _________e _________e _________e    _________f _________f _________f
        _________d _________d _________d    _________e _________e _________e    _________f _________f _________f
        _________d _________d _________d    12_______e _________e 12_______e    _________f _________f _________f
        
        _________g _________g _________g    123_56789h 123_56789h 123_56789h    _________i _________i _________i
        _________g _________g _________g    123_56789h 123_56789h 123_56789h    _________i _________i _________i
        123_56789g 123_56789g 123_56789g    12_4_____h 123_56789h 12_4_____h    123_56789i 123_56789i 123_56789i
        """
    if solve(9, actual, expected, UniqueRectangleType2()):
        return
    assert False

def test_sudoku_explicit_unique_rectangle_type2_normal_west():
    actual = \
        f"""
        _________a _________a _________a    _________b _________b _________b    _________c _________c _________c
        _________a _________a _________a    _________b _________b _________b    _________c _________c _________c
        _________a _________a _________a    _________b _________b _________b    _________c _________c _________c
        
        _________d _________d 123______d    _________e _________e _________e    _________f _________f 12_______f
        _________d _________d _________d    _________e _________e _________e    _________f _________f _________f
        _________d _________d 123______d    _________e _________e _________e    _________f _________f 12_______f
        
        _________g _________g _________g    _________h _________h _________h    _________i _________i _________i
        _________g _________g _________g    _________h _________h _________h    _________i _________i _________i
        _________g _________g _________g    _________h _________h _________h    _________i _________i _________i
        """

    expected = \
        f"""
        _________a _________a 12_456789a    _________b _________b _________b    _________c _________c _________c
        _________a _________a 12_456789a    _________b _________b _________b    _________c _________c _________c
        _________a _________a 12_456789a    _________b _________b _________b    _________c _________c _________c
        
        12_456789d 12_456789d 123______d    _________e _________e _________e    _________f _________f 12_______f
        12_456789d 12_456789d 12_456789d    _________e _________e _________e    _________f _________f _________f
        12_456789d 12_456789d 123______d    _________e _________e _________e    _________f _________f 12_______f
        
        _________g _________g 12_456789g    _________h _________h _________h    _________i _________i _________i
        _________g _________g 12_456789g    _________h _________h _________h    _________i _________i _________i
        _________g _________g 12_456789g    _________h _________h _________h    _________i _________i _________i
        """
    if solve(9, actual, expected, UniqueRectangleType2()):
        return
    assert False





