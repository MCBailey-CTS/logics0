from tech import tech
from tests_explicit.test_small_explicit import solve


def test_sudoku_explicit_hidden_triple_cols():
    actual = \
        f"""
    ____5____a 123456789a 123456789a    123456789b 123456789b 123456789b    123456789c 123456789c 123456789c 
    ___4_____a 123456789a 123456789a    123456789b 123456789b 123456789b    123456789c 123456789c 123456789c 
    1_3__6_89a 123456789a 123456789a    123456789b 123456789b 123456789b    123456789c 123456789c 123456789c 
    
    12___6__9d 123456789d 123456789d    123456789e 123456789e 123456789e    123456789f 123456789f 123456789f 
    _____6789d 123456789d 123456789d    123456789e 123456789e 123456789e    123456789f 123456789f 123456789f 
    1_3___789d 123456789d 123456789d    123456789e 123456789e 123456789e    123456789f 123456789f 123456789f 
    
    _2______9g 123456789g 123456789g    123456789h 123456789h 123456789h    123456789i 123456789i 123456789i 
    _2___6__9g 123456789g 123456789g    123456789h 123456789h 123456789h    123456789i 123456789i 123456789i 
    12___6__9g 123456789g 123456789g    123456789h 123456789h 123456789h    123456789i 123456789i 123456789i 
    """

    expected = \
        f"""
    ____5____a 123456789a 123456789a    123456789b 123456789b 123456789b    123456789c 123456789c 123456789c 
    ___4_____a 123456789a 123456789a    123456789b 123456789b 123456789b    123456789c 123456789c 123456789c 
    __3____8_a 123456789a 123456789a    123456789b 123456789b 123456789b    123456789c 123456789c 123456789c 
    
    12___6__9d 123456789d 123456789d    123456789e 123456789e 123456789e    123456789f 123456789f 123456789f 
    ______78_d 123456789d 123456789d    123456789e 123456789e 123456789e    123456789f 123456789f 123456789f 
    __3___78_d 123456789d 123456789d    123456789e 123456789e 123456789e    123456789f 123456789f 123456789f 
    
    _2______9g 123456789g 123456789g    123456789h 123456789h 123456789h    123456789i 123456789i 123456789i 
    _2___6__9g 123456789g 123456789g    123456789h 123456789h 123456789h    123456789i 123456789i 123456789i 
    12___6__9g 123456789g 123456789g    123456789h 123456789h 123456789h    123456789i 123456789i 123456789i 
    """
    if solve(9, actual, expected, tech.HiddenTriple()):
        return
    assert False


def test_sudoku_explicit_hidden_triple_fences():
    actual = \
        f"""
    123456789a 123456789a 123456789a    123456789b 123456789b 123456789b    _2___67__c _2___678_c _2___6___c 
    123456789a 123456789a 123456789a    123456789b 123456789b 123456789b    1_345_7__c ___4__7__c 1_345____c 
    123456789a 123456789a 123456789a    123456789b 123456789b 123456789b    __3_567__c _____678_c ________9c 
    
    123456789d 123456789d 123456789d    123456789e 123456789e 123456789e    123456789f 123456789f 123456789f 
    123456789d 123456789d 123456789d    123456789e 123456789e 123456789e    123456789f 123456789f 123456789f 
    123456789d 123456789d 123456789d    123456789e 123456789e 123456789e    123456789f 123456789f 123456789f 
    
    123456789g 123456789g 123456789g    123456789h 123456789h 123456789h    123456789i 123456789i 123456789i 
    123456789g 123456789g 123456789g    123456789h 123456789h 123456789h    123456789i 123456789i 123456789i 
    123456789g 123456789g 123456789g    123456789h 123456789h 123456789h    123456789i 123456789i 123456789i 
    """

    expected = \
        f"""
    123456789a 123456789a 123456789a    123456789b 123456789b 123456789b    _2___67__c _2___678_c _2___6___c 
    123456789a 123456789a 123456789a    123456789b 123456789b 123456789b    1_3_5____c ___4__7__c 1_3_5____c 
    123456789a 123456789a 123456789a    123456789b 123456789b 123456789b    __3_5____c _____678_c ________9c 
    
    123456789d 123456789d 123456789d    123456789e 123456789e 123456789e    123456789f 123456789f 123456789f 
    123456789d 123456789d 123456789d    123456789e 123456789e 123456789e    123456789f 123456789f 123456789f 
    123456789d 123456789d 123456789d    123456789e 123456789e 123456789e    123456789f 123456789f 123456789f 
    
    123456789g 123456789g 123456789g    123456789h 123456789h 123456789h    123456789i 123456789i 123456789i 
    123456789g 123456789g 123456789g    123456789h 123456789h 123456789h    123456789i 123456789i 123456789i 
    123456789g 123456789g 123456789g    123456789h 123456789h 123456789h    123456789i 123456789i 123456789i 
    """
    if solve(9, actual, expected, tech.HiddenTriple()):
        return
    assert False


def test_sudoku_explicit_hidden_triple_rows():
    actual = \
        f"""
    123456789a 123456789a 123456789a    123456789b 123456789b 123456789b    123456789c 123456789c 123456789c 
    123456789a 123456789a 123456789a    123456789b 123456789b 123456789b    123456789c 123456789c 123456789c 
    123456789a 123456789a 123456789a    123456789b 123456789b 123456789b    123456789c 123456789c 123456789c 
    
    123456789d 123456789d 123456789d    123456789e 123456789e 123456789e    123456789f 123456789f 123456789f 
    123456789d 123456789d 123456789d    123456789e 123456789e 123456789e    123456789f 123456789f 123456789f 
    123456789d 123456789d 123456789d    123456789e 123456789e 123456789e    123456789f 123456789f 123456789f 
    
    123456789g 123456789g 123456789g    123456789h 123456789h 123456789h    123456789i 123456789i 123456789i 
    123456789g 123456789g 123456789g    123456789h 123456789h 123456789h    123456789i 123456789i 123456789i 
    ___456789g ___456789g 123456789g    ___456789h 123456789h ___456789h    123456789i ___456789i ___456789i 
    
    """

    expected = \
        f"""
    123456789a 123456789a 123456789a    123456789b 123456789b 123456789b    123456789c 123456789c 123456789c 
    123456789a 123456789a 123456789a    123456789b 123456789b 123456789b    123456789c 123456789c 123456789c 
    123456789a 123456789a 123456789a    123456789b 123456789b 123456789b    123456789c 123456789c 123456789c 
    
    123456789d 123456789d 123456789d    123456789e 123456789e 123456789e    123456789f 123456789f 123456789f 
    123456789d 123456789d 123456789d    123456789e 123456789e 123456789e    123456789f 123456789f 123456789f 
    123456789d 123456789d 123456789d    123456789e 123456789e 123456789e    123456789f 123456789f 123456789f 
    
    123456789g 123456789g 123456789g    123456789h 123456789h 123456789h    123456789i 123456789i 123456789i 
    123456789g 123456789g 123456789g    123456789h 123456789h 123456789h    123456789i 123456789i 123456789i 
    ___456789g ___456789g 123______g    ___456789h 123______h ___456789h    123______i ___456789i ___456789i 
    """
    if solve(9, actual, expected, tech.HiddenTriple()):
        return
    assert False
