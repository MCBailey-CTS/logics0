from tech import tech
from tests_explicit.test_small_explicit import solve


def test_sudoku_explicit_hidden_pair_cols_():
    actual = \
        f"""
    1_3456_89a _________a _________a    _________b _________b _________b    _________c _________c _________c
    _________a _________a _________a    _________b _________b _________b    _________c _________c _________c
    1_3456_89a _________a _________a    _________b _________b _________b    _________c _________c _________c
    
    1_3456_89d _________d _________d    _________e _________e _________e    _________f _________f _________f
    1_3456_89d _________d _________d    _________e _________e _________e    _________f _________f _________f
    1_3456_89d _________d _________d    _________e _________e _________e    _________f _________f _________f
    
    _________g _________g _________g    _________h _________h _________h    _________i _________i _________i
    1_3456_89g _________g _________g    _________h _________h _________h    _________i _________i _________i
    1_3456_89g _________g _________g    _________h _________h _________h    _________i _________i _________i
    """
    expected = \
        f"""
    1_3456_89a _________a _________a    _________b _________b _________b    _________c _________c _________c
    _2____7__a _________a _________a    _________b _________b _________b    _________c _________c _________c
    1_3456_89a _________a _________a    _________b _________b _________b    _________c _________c _________c
    
    1_3456_89d _________d _________d    _________e _________e _________e    _________f _________f _________f
    1_3456_89d _________d _________d    _________e _________e _________e    _________f _________f _________f
    1_3456_89d _________d _________d    _________e _________e _________e    _________f _________f _________f
    
    _2____7__g _________g _________g    _________h _________h _________h    _________i _________i _________i
    1_3456_89g _________g _________g    _________h _________h _________h    _________i _________i _________i
    1_3456_89g _________g _________g    _________h _________h _________h    _________i _________i _________i
    """
    if solve(9, actual, expected, tech.HiddenPair()):
        return
    assert False


def test_sudoku_explicit_hidden_pair_fences():
    actual = \
        f"""
    _________a _________a _________a    _________b _________b _________b    _________c _________c _________c
    _________a _________a _________a    _________b _________b _________b    _________c _________c _________c
    _________a _________a _________a    _________b _________b _________b    _________c _________c _________c
    
    _________d _________d _________d    _________e _________e _________e    _________f _________f _________f
    _________d _________d _________d    _________e _________e _________e    _________f _________f _________f
    _________d _________d _________d    _________e _________e _________e    _________f _________f _________f
    
    _________g _________g _________g    _________h _________h _________h    1_3456_89i _________i 1_3456_89i
    _________g _________g _________g    _________h _________h _________h    1_3456_89i 1_3456_89i 1_3456_89i
    _________g _________g _________g    _________h _________h _________h    1_3456_89i 1_3456_89i _________i
    """
    expected = \
        f"""
    _________a _________a _________a    _________b _________b _________b    _________c _________c _________c
    _________a _________a _________a    _________b _________b _________b    _________c _________c _________c
    _________a _________a _________a    _________b _________b _________b    _________c _________c _________c
    
    _________d _________d _________d    _________e _________e _________e    _________f _________f _________f
    _________d _________d _________d    _________e _________e _________e    _________f _________f _________f
    _________d _________d _________d    _________e _________e _________e    _________f _________f _________f
    
    _________g _________g _________g    _________h _________h _________h    1_3456_89i _2____7__i 1_3456_89i
    _________g _________g _________g    _________h _________h _________h    1_3456_89i 1_3456_89i 1_3456_89i
    _________g _________g _________g    _________h _________h _________h    1_3456_89i 1_3456_89i _2____7__i
    """
    if solve(9, actual, expected, tech.HiddenPair()):
        return
    assert False


def test_sudoku_explicit_hidden_pair_rows():
    temp = ""
    match temp:
        case "":
            print('jello')
    actual = \
        f"""
    1_3456_89a _________a 1_3456_89a    1_3456_89b 1_3456_89b _________b    1_3456_89c 1_3456_89c 1_3456_89c
    _________a _________a _________a    _________b _________b _________b    _________c _________c _________c
    _________a _________a _________a    _________b _________b _________b    _________c _________c _________c
    
    _________d _________d _________d    _________e _________e _________e    _________f _________f _________f
    _________d _________d _________d    _________e _________e _________e    _________f _________f _________f
    _________d _________d _________d    _________e _________e _________e    _________f _________f _________f
    
    _________g _________g _________g    _________h _________h _________h    _________i _________i _________i
    _________g _________g _________g    _________h _________h _________h    _________i _________i _________i
    _________g _________g _________g    _________h _________h _________h    _________i _________i _________i
    """
    expected = \
        f"""
    1_3456_89a _2____7__a 1_3456_89a    1_3456_89b 1_3456_89b _2____7__b    1_3456_89c 1_3456_89c 1_3456_89c
    _________a _________a _________a    _________b _________b _________b    _________c _________c _________c
    _________a _________a _________a    _________b _________b _________b    _________c _________c _________c
    
    _________d _________d _________d    _________e _________e _________e    _________f _________f _________f
    _________d _________d _________d    _________e _________e _________e    _________f _________f _________f
    _________d _________d _________d    _________e _________e _________e    _________f _________f _________f
    
    _________g _________g _________g    _________h _________h _________h    _________i _________i _________i
    _________g _________g _________g    _________h _________h _________h    _________i _________i _________i
    _________g _________g _________g    _________h _________h _________h    _________i _________i _________i
    """
    if solve(9, actual, expected, tech.HiddenPair()):
        return
    assert False
