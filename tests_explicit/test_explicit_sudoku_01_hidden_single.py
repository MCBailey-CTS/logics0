from tests_explicit.test_small_explicit import solve
from techniques.HiddenSingle import HiddenSingle


def test_sudoku_4x4_hidden_single_rows():
    actual = \
        f"""
        123_a 123_a   123_b ____b
        ____a ____a   ____b ____b

        ____c ____c   ____d ____d
        ____c ____c   ____d ____d
        """

    expected = \
        f"""
        123_a 123_a   123_b ___4b
        ____a ____a   ____b ____b

        ____c ____c   ____d ____d
        ____c ____c   ____d ____d
        """
    if solve(4, actual, expected, HiddenSingle()):
        return
    assert False


def test_sudoku_4x4_hidden_single_cols():
    actual = \
        f"""
        123_a ____a   ____b ____b
        123_a ____a   ____b ____b

        123_c ____c   ____d ____d
        ____c ____c   ____d ____d
        """

    expected = \
        f"""
        123_a ____a   ____b ____b
        123_a ____a   ____b ____b

        123_c ____c   ____d ____d
        ___4c ____c   ____d ____d
        """
    if solve(4, actual, expected, HiddenSingle()):
        return
    assert False


def test_sudoku_4x4_hidden_single_fences():
    actual = \
        f"""
        123_a 123_a   ____b ____b
        123_a ____a   ____b ____b

        ____c ____c   ____d ____d
        ____c ____c   ____d ____d
        """

    expected = \
        f"""
        123_a 123_a   ____b ____b
        123_a ___4a   ____b ____b

        ____c ____c   ____d ____d
        ____c ____c   ____d ____d
        """
    if solve(4, actual, expected, HiddenSingle()):
        return
    assert False


def test_sudoku_explicit_hidden_single_cols():
    actual = \
        f"""
    _________a _________a _________a    _________b _________b _________b    _________c _________c 1234_6789c
    _________a _________a _________a    _________b _________b _________b    _________c _________c 1234_6789c
    _________a _________a _________a    _________b _________b _________b    _________c _________c 1234_6789c
    
    _________d _________d _________d    _________e _________e _________e    _________f _________f 1234_6789f
    _________d _________d _________d    _________e _________e _________e    _________f _________f 1234_6789f
    _________d _________d _________d    _________e _________e _________e    _________f _________f 1234_6789f
    
    _________g _________g _________g    _________h _________h _________h    _________i _________i _________i
    _________g _________g _________g    _________h _________h _________h    _________i _________i 1234_6789i
    _________g _________g _________g    _________h _________h _________h    _________i _________i 1234_6789i
    """

    expected = \
        f"""
    _________a _________a _________a    _________b _________b _________b    _________c _________c 1234_6789c
    _________a _________a _________a    _________b _________b _________b    _________c _________c 1234_6789c
    _________a _________a _________a    _________b _________b _________b    _________c _________c 1234_6789c
    
    _________d _________d _________d    _________e _________e _________e    _________f _________f 1234_6789f
    _________d _________d _________d    _________e _________e _________e    _________f _________f 1234_6789f
    _________d _________d _________d    _________e _________e _________e    _________f _________f 1234_6789f
    
    _________g _________g _________g    _________h _________h _________h    _________i _________i ____5____i
    _________g _________g _________g    _________h _________h _________h    _________i _________i 1234_6789i
    _________g _________g _________g    _________h _________h _________h    _________i _________i 1234_6789i
    """
    if solve(9, actual, expected, HiddenSingle()):
        return
    assert False


def test_sudoku_explicit_hidden_single_fences():
    actual = \
        f"""
    _________a _________a _________a    _________b _________b _________b    _________c _________c _________c
    _________a _________a _________a    _________b _________b _________b    _________c _________c _________c
    _________a _________a _________a    _________b _________b _________b    _________c _________c _________c
    
    _________d _________d _________d    _________e _________e _________e    _________f _________f _________f
    _________d _________d _________d    _________e _________e _________e    _________f _________f _________f
    _________d _________d _________d    _________e _________e _________e    _________f _________f _________f
    
    _________g _________g _________g    _________h _________h _________h    1234_6789i 1234_6789i 1234_6789i
    _________g _________g _________g    _________h _________h _________h    1234_6789i _________i 1234_6789i
    _________g _________g _________g    _________h _________h _________h    1234_6789i 1234_6789i 1234_6789i
    """

    expected = \
        f"""
    _________a _________a _________a    _________b _________b _________b    _________c _________c _________c
    _________a _________a _________a    _________b _________b _________b    _________c _________c _________c
    _________a _________a _________a    _________b _________b _________b    _________c _________c _________c
    
    _________d _________d _________d    _________e _________e _________e    _________f _________f _________f
    _________d _________d _________d    _________e _________e _________e    _________f _________f _________f
    _________d _________d _________d    _________e _________e _________e    _________f _________f _________f
    
    _________g _________g _________g    _________h _________h _________h    1234_6789i 1234_6789i 1234_6789i
    _________g _________g _________g    _________h _________h _________h    1234_6789i ____5____i 1234_6789i
    _________g _________g _________g    _________h _________h _________h    1234_6789i 1234_6789i 1234_6789i
    """
    if solve(9, actual, expected, HiddenSingle()):
        return
    assert False


def test_sudoku_explicit_hidden_single_rows():
    actual = \
        f"""
    _________a _________a _________a   _________b _________b _________b    _________c _________c _________c
    _________a _________a _________a   _________b _________b _________b    _________c _________c _________c
    1234_6789a 1234_6789a 1234_6789a   _________b 1234_6789b 1234_6789b    1234_6789c 1234_6789c 1234_6789c
    _________d _________d _________d   _________e _________e _________e    _________f _________f _________f
    _________d _________d _________d   _________e _________e _________e    _________f _________f _________f
    _________d _________d _________d   _________e _________e _________e    _________f _________f _________f
    _________g _________g _________g   _________h _________h _________h    _________i _________i _________i
    _________g _________g _________g   _________h _________h _________h    _________i _________i _________i
    _________g _________g _________g   _________h _________h _________h    _________i _________i _________i
    """

    expected = \
        f"""
    _________a _________a _________a   _________b _________b _________b    _________c _________c _________c
    _________a _________a _________a   _________b _________b _________b    _________c _________c _________c
    1234_6789a 1234_6789a 1234_6789a   ____5____b 1234_6789b 1234_6789b    1234_6789c 1234_6789c 1234_6789c
    _________d _________d _________d   _________e _________e _________e    _________f _________f _________f
    _________d _________d _________d   _________e _________e _________e    _________f _________f _________f
    _________d _________d _________d   _________e _________e _________e    _________f _________f _________f
    _________g _________g _________g   _________h _________h _________h    _________i _________i _________i
    _________g _________g _________g   _________h _________h _________h    _________i _________i _________i
    _________g _________g _________g   _________h _________h _________h    _________i _________i _________i
    """
    if solve(9, actual, expected, HiddenSingle()):
        return
    assert False
