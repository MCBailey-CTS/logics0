import pytest

from _defaults import default_test_puzzle
from puzzles import *
from solving import Solving


EXPLICITLY = "EXPLICITLY"


def test_mathrax_001():
    puzzle_string = f"""
    001.mathrax
    4
    1___ ... 1234 ... ___4 ... __3_
    .... 04+ .... 01- .... ... ....
    _2__ ... 1234 ... 1234 ... 1234
    .... 01- .... ... .... 01- ....
    ___4 ... 1234 ... 1234 ... 1234
    .... ... .... 01- .... ... ....
    __3_ ... 1234 ... 1234 ... 1234
    """
    assert default_test_puzzle(puzzle_string, Mathrax, Solving.mathrax_techniques())


def test_mathrax_002():
    puzzle_string = f"""
    002.mathrax
    4
    1234 ... 1234 ... 1234 ... 1___
    .... 04x .... ... .... ... ....
    1234 ... 1234 ... 1234 ... 1234
    .... 02- .... 01- .... ... ....
    ___4 ... 1234 ... 1___ ... 1234
    .... ... .... ... .... 04x ....
    1234 ... 1___ ... 1234 ... ___4
    """
    assert default_test_puzzle(puzzle_string, Mathrax, Solving.mathrax_techniques())


def test_mathrax_003():
    puzzle_string = f"""
    003.mathrax
    4
    1234 ... 1___ ... 1234 ... 1234
    .... ... .... 01- .... ... ....
    1234 ... __3_ ... 1234 ... 1234
    .... ... .... 06+ .... 04+ ....
    1234 ... 1234 ... __3_ ... 1234
    .... 01- .... 05+ .... ... ....
    1234 ... 1234 ... 1234 ... 1234
    """
    assert default_test_puzzle(puzzle_string, Mathrax, Solving.mathrax_techniques())


def test_mathrax_004():
    puzzle_string = f"""
    004.mathrax
    4
    1234 ... 1234 ... 1234 ... 1234
    .... 04x .... 01- .... ... ....
    1234 ... 1234 ... 1234 ... 1234
    .... 02- .... 00- .... ... ....
    1234 ... 1234 ... 1234 ... 1234
    .... ... .... 01- .... ... ....
    1234 ... 1234 ... 1234 ... 1234
    """
    assert default_test_puzzle(puzzle_string, Mathrax, Solving.mathrax_techniques())


def test_mathrax_005():
    puzzle_string = f"""
        005.mathrax
        5
        __3__ ... _2___ ... 12345 ... 12345 ... 12345
        ..... ... ..... 05+ ..... 08+ ..... ... .....
        12345 ... 12345 ... 12345 ... ___4_ ... 12345
        ..... ... ..... ... ..... 02- ..... ... .....
        12345 ... 12345 ... 12345 ... 12345 ... 12345
        ..... ... ..... ... ..... ... ..... 01- .....
        12345 ... 12345 ... 12345 ... __3__ ... 12345
        ..... ... ..... ... ..... ... ..... ... .....
        1____ ... 12345 ... 12345 ... 12345 ... __3__
        """
    assert default_test_puzzle(puzzle_string, Mathrax, Solving.mathrax_techniques())


@pytest.mark.skip("EXPLICITLY")
def test_mathrax_006():
    puzzle_string = f"""
    006.mathrax
    5
    12345 ... 12345 ... 12345 ... 12345 ... _2___
    ..... ... ..... ... ..... ... ..... ... .....
    12345 ... 12345 ... 12345 ... 12345 ... 12345
    ..... ... ..... 05+ ..... 01- ..... ... .....
    12345 ... 1____ ... 12345 ... 12345 ... 12345
    ..... 05+ ..... ... ..... ... ..... ... .....
    12345 ... 12345 ... 12345 ... 12345 ... 12345
    ..... ... ..... 01- ..... ... ..... ... .....
    12345 ... 12345 ... 12345 ... 12345 ... 12345
    """
    assert default_test_puzzle(puzzle_string, Mathrax, Solving.mathrax_techniques())


def test_mathrax_007():
    puzzle_string = f"""
    007.mathrax
    5
    12345 ... 12345 ... 12345 ... 12345 ... 12345
    ..... ... ..... ... ..... ... ..... 07+ .....
    12345 ... 12345 ... 12345 ... 12345 ... 12345
    ..... 04x ..... 02- ..... ... ..... OOO .....
    12345 ... 12345 ... 12345 ... 12345 ... 12345
    ..... ... ..... ... ..... 07+ ..... ... .....
    12345 ... 12345 ... 12345 ... 12345 ... 12345
    ..... ... ..... ... ..... 01- ..... 02- .....
    12345 ... 12345 ... 12345 ... 12345 ... 12345
    """
    assert default_test_puzzle(puzzle_string, Mathrax, Solving.mathrax_techniques())


@pytest.mark.skip("EXPLICITLY")
def test_mathrax_008():
    puzzle_string = f"""
    008.mathrax
    5
    12345 ... 12345 ... 12345 ... 12345 ... 12345
    ..... OOO ..... ... ..... 02- ..... ... .....
    12345 ... 12345 ... 12345 ... 12345 ... 12345
    ..... ... ..... 05+ ..... 01- ..... ... .....
    12345 ... 12345 ... 12345 ... 12345 ... 12345
    ..... ... ..... 02- ..... ... ..... ... .....
    12345 ... 12345 ... 12345 ... 12345 ... 12345
    ..... ... ..... 01- ..... ... ..... ... .....
    12345 ... 12345 ... 12345 ... 12345 ... 12345
    """
    assert default_test_puzzle(puzzle_string, Mathrax, Solving.mathrax_techniques())


@pytest.mark.skip("EXPLICITLY")
def test_mathrax_009():
    puzzle_string = f"""
    009.mathrax
    6
    123456 ... ___4__ ... 123456 ... 123456 ... 123456 ... 123456
    ...... ... ...... ... ...... ... ...... ... ...... ... ......
    123456 ... 123456 ... 123456 ... ____5_ ... 123456 ... 123456
    ...... ... ...... 02- ...... ... ...... ... ...... ... ......
    123456 ... 123456 ... 123456 ... 123456 ... 123456 ... 123456
    ...... ... ...... ... ...... 02- ...... ... ...... ... ......
    123456 ... 123456 ... 123456 ... 123456 ... 123456 ... 123456
    ...... ... ...... ... ...... 07+ ...... ... ...... 07+ ......
    1_____ ... 123456 ... 123456 ... 123456 ... 123456 ... 123456
    ...... ... ...... ... ...... ... ...... 09+ ...... ... ......
    123456 ... 123456 ... _2____ ... 123456 ... 123456 ... 123456
    """
    assert default_test_puzzle(puzzle_string, Mathrax, Solving.mathrax_techniques())


def test_mathrax_010():
    puzzle_string = f"""
    010.mathrax
    6
    123456 ... 123456 ... 123456 ... 123456 ... 123456 ... 123456
    ...... ... ...... ... ...... 03- ...... ... ...... ... ......
    123456 ... 123456 ... 123456 ... 123456 ... 123456 ... 123456
    ...... ... ...... ... ...... ... ...... 02/ ...... 07+ ......
    123456 ... 123456 ... 123456 ... 123456 ... 123456 ... 123456
    ...... ... ...... ... ...... ... ...... ... ...... ... ......
    123456 ... 123456 ... 123456 ... 123456 ... 123456 ... 123456
    ...... 04x ...... 08+ ...... 03- ...... ... ...... ... ......
    123456 ... 123456 ... 123456 ... 123456 ... 123456 ... 123456
    ...... 06x ...... ... ...... 08+ ...... ... ...... ... ......
    123456 ... 123456 ... 123456 ... 123456 ... 123456 ... 123456
    """
    assert default_test_puzzle(puzzle_string, Mathrax, Solving.mathrax_techniques())


def test_mathrax_011():
    puzzle_string = f"""
    011.mathrax
    6
    123456 ... 123456 ... 123456 ... 123456 ... 123456 ... _2____
    ...... ... ...... ... ...... ... ...... ... ...... ... ......
    123456 ... 123456 ... 123456 ... 123456 ... 123456 ... 123456
    ...... ... ...... ... ...... 04+ ...... 05+ ...... ... ......
    123456 ... _____6 ... 123456 ... _2____ ... 123456 ... 123456
    ...... ... ...... ... ...... ... ...... ... ...... ... ......
    123456 ... 123456 ... 123456 ... 123456 ... 123456 ... ___4__
    ...... ... ...... ... ...... ... ...... 02- ...... ... ......
    __3___ ... _2____ ... 123456 ... 123456 ... 123456 ... 123456
    ...... 02- ...... 04- ...... ... ...... 06+ ...... 03/ ......
    123456 ... 123456 ... 123456 ... ____5_ ... 123456 ... 123456
    """
    assert default_test_puzzle(puzzle_string, Mathrax, Solving.mathrax_techniques())


def test_mathrax_012():
    puzzle_string = f"""
    012.mathrax
    6
    123456 ... 123456 ... 123456 ... 123456 ... 123456 ... 123456
    ...... 01- ...... ... ...... ... ...... ... ...... ... ......
    123456 ... 123456 ... 123456 ... 123456 ... 123456 ... 123456
    ...... ... ...... 04- ...... ... ...... 08+ ...... 03- ......
    123456 ... 123456 ... 123456 ... 123456 ... 123456 ... 123456
    ...... 07+ ...... ... ...... ... ...... ... ...... ... ......
    123456 ... 123456 ... 123456 ... 123456 ... 123456 ... 123456
    ...... 02- ...... 06+ ...... 03/ ...... ... ...... 03- ......
    123456 ... 123456 ... 123456 ... 123456 ... 123456 ... 123456
    ...... ... ...... ... ...... 05+ ...... ... ...... ... ......
    123456 ... 123456 ... 123456 ... 123456 ... 123456 ... 123456
    """
    assert default_test_puzzle(puzzle_string, Mathrax, Solving.mathrax_techniques())


@pytest.mark.skip("EXPLICITLY")
def test_mathrax_013():
    puzzle_string = f"""
    013.mathrax
    6
    123456 ... 123456 ... 123456 ... 123456 ... 123456 ... 123456
    ...... ... ...... ... ...... 02- ...... ... ...... ... ......
    123456 ... 123456 ... 123456 ... 123456 ... 123456 ... 123456
    ...... ... ...... 05+ ...... ... ...... ... ...... ... ......
    123456 ... 123456 ... 123456 ... 123456 ... 123456 ... 123456
    ...... ... ...... ... ...... ... ...... ... ...... ... ......
    _____5 ... 123456 ... 1_____ ... 123456 ... _2____ ... 123456
    ...... ... ...... ... ...... ... ...... ... ...... ... ......
    ____4_ ... 123456 ... 123456 ... 123456 ... 123456 ... 123456
    ...... ... ...... ... ...... ... ...... 03/ ...... ... ......
    123456 ... 123456 ... 123456 ... 1_____ ... 123456 ... _____5
    """
    assert default_test_puzzle(puzzle_string, Mathrax, Solving.mathrax_techniques())


@pytest.mark.skip("EXPLICITLY")
def test_mathrax_014():
    puzzle_string = f"""
    014.mathrax
    6
    123456 ... 123456 ... 123456 ... 123456 ... 123456 ... 123456
    ...... ... ...... ... ...... ... ...... 01- ...... 05+ ......
    123456 ... 123456 ... 123456 ... 123456 ... 123456 ... 123456
    ...... ... ...... ... ...... 06+ ...... ... ...... ... ......
    123456 ... 123456 ... 123456 ... 123456 ... 123456 ... 123456
    ...... ... ...... 06+ ...... ... ...... ... ...... ... ......
    123456 ... 123456 ... 123456 ... 123456 ... 123456 ... 123456
    ...... ... ...... ... ...... ... ...... 01- ...... ... ......
    123456 ... 123456 ... 123456 ... 123456 ... 123456 ... 123456
    ...... 07+ ...... 02/ ...... ... ...... ... ...... 01- ......
    123456 ... 123456 ... 123456 ... 123456 ... 123456 ... 123456
    """
    assert default_test_puzzle(puzzle_string, Mathrax, Solving.mathrax_techniques())


@pytest.mark.skip("EXPLICITLY")
def test_mathrax_015():
    puzzle_string = f"""
    015.mathrax
    6
    123456 ... 123456 ... 123456 ... 123456 ... 123456 ... 123456
    ...... ... ...... ... ...... ... ...... ... ...... ... ......
    123456 ... 123456 ... 123456 ... 123456 ... 123456 ... 123456
    ...... EEE ...... ... ...... ... ...... ... ...... ... ......
    123456 ... 123456 ... 123456 ... _____6 ... 123456 ... 123456
    ...... ... ...... 01- ...... ... ...... ... ...... 07+ ......
    ____5_ ... 123456 ... 123456 ... 123456 ... 123456 ... 123456
    ...... ... ...... ... ...... ... ...... 01- ...... ... ......
    123456 ... 123456 ... 123456 ... 123456 ... 123456 ... 123456
    ...... ... ...... ... ...... 04- ...... ... ...... ... ......
    123456 ... 123456 ... 123456 ... 123456 ... 123456 ... 123456
    """
    assert default_test_puzzle(puzzle_string, Mathrax, Solving.mathrax_techniques())


@pytest.mark.skip("EXPLICITLY")
def test_mathrax_016():
    puzzle_string = f"""
    016.mathrax
    7
    1234567 ... 1234567 ... 1234567 ... 1234567 ... 1234567 ... 1234567 ... 1234567
    ....... 08+ ....... ... ....... 01- ....... ... ....... ... ....... ... .......
    1234567 ... 1234567 ... 1234567 ... 1234567 ... 1234567 ... 1234567 ... 1234567
    ....... ... ....... ... ....... 03- ....... ... ....... ... ....... ... .......
    1234567 ... 1234567 ... 1234567 ... 1234567 ... 1234567 ... 1234567 ... 1234567
    ....... ... ....... ... ....... ... ....... ... ....... 04+ ....... ... .......
    1234567 ... 1234567 ... 1234567 ... 1234567 ... 1234567 ... 1234567 ... 1234567
    ....... ... ....... ... ....... 02- ....... ... ....... 04- ....... ... .......
    1234567 ... 1234567 ... 1234567 ... 1234567 ... 1234567 ... 1234567 ... 1234567
    ....... 08+ ....... 06+ ....... 04+ ....... 04- ....... ... ....... ... .......
    1234567 ... 1234567 ... 1234567 ... 1234567 ... 1234567 ... 1234567 ... 1234567
    ....... 06+ ....... ... ....... ... ....... ... ....... 11+ ....... 01- .......
    1234567 ... 1234567 ... 1234567 ... 1234567 ... 1234567 ... 1234567 ... 1234567
    """
    assert default_test_puzzle(puzzle_string, Mathrax, Solving.mathrax_techniques())


def test_mathrax_017():
    puzzle_string = f"""
    017.mathrax
    7
    1234567 ... 1234567 ... 1______ ... 1234567 ... 1234567 ... 1234567 ... 1234567
    ....... ... ....... ... ....... 01- ....... ... ....... ... ....... 01- .......
    1______ ... 1234567 ... 1234567 ... 1234567 ... 1234567 ... 1234567 ... 1234567
    ....... ... ....... ... ....... ... ....... ... ....... ... ....... ... .......
    1234567 ... 1234567 ... ____5__ ... 1234567 ... 1234567 ... 1234567 ... __3____
    ....... ... ....... 03- ....... ... ....... 02/ ....... 12x ....... ... .......
    1234567 ... 1234567 ... 1234567 ... 1234567 ... 1234567 ... 1234567 ... 1234567
    ....... ... ....... 01- ....... ... ....... ... ....... ... ....... ... .......
    1234567 ... 1234567 ... 1234567 ... 1234567 ... ______7 ... 1234567 ... 1234567
    ....... ... ....... ... ....... ... ....... ... ....... ... ....... ... .......
    1234567 ... 1234567 ... 1234567 ... __3____ ... 1234567 ... 1234567 ... 1234567
    ....... ... ....... ... ....... ... ....... ... ....... ... ....... ... .......
    1234567 ... 1234567 ... 1234567 ... 1234567 ... 1234567 ... 1234567 ... ____5__
    """
    assert default_test_puzzle(puzzle_string, Mathrax, Solving.mathrax_techniques())


@pytest.mark.skip("EXPLICITLY")
def test_mathrax_018():
    puzzle_string = f"""
    018.mathrax
    7
    1234567 ... 1234567 ... 1234567 ... 1234567 ... 1234567 ... 1234567 ... 1234567
    ....... ... ....... ... ....... ... ....... ... ....... 06+ ....... 04+ .......
    1234567 ... 1234567 ... 1234567 ... 1234567 ... 1234567 ... 1234567 ... 1234567
    ....... ... ....... ... ....... ... ....... ... ....... 03/ ....... ... .......
    1234567 ... 1234567 ... 1234567 ... 1234567 ... 1234567 ... 1234567 ... 1234567
    ....... ... ....... ... ....... 03/ ....... ... ....... ... ....... ... .......
    1234567 ... 1234567 ... 1234567 ... 1234567 ... 1234567 ... 1234567 ... 1234567
    ....... ... ....... ... ....... ... ....... ... ....... ... ....... OOO .......
    1234567 ... 1234567 ... 1234567 ... 1234567 ... 1234567 ... 1234567 ... 1234567
    ....... 06+ ....... ... ....... ... ....... ... ....... ... ....... ... .......
    1234567 ... 1234567 ... 1234567 ... 1234567 ... 1234567 ... 1234567 ... 1234567
    ....... 04+ ....... 06+ ....... ... ....... ... ....... 01- ....... ... .......
    1234567 ... 1234567 ... 1234567 ... 1234567 ... 1234567 ... 1234567 ... 1234567
    """
    assert default_test_puzzle(puzzle_string, Mathrax, Solving.mathrax_techniques())


@pytest.mark.skip("EXPLICITLY")
def test_mathrax_020():
    puzzle_string = f"""
    020.mathrax
    7
    1234567 ... 1234567 ... 1234567 ... 1234567 ... 1234567 ... 1234567 ... 1234567
    ....... ... ....... ... ....... 01- ....... 09+ ....... ... ....... ... .......
    1234567 ... 1234567 ... 1234567 ... 1234567 ... 1234567 ... _2_____ ... 1234567
    ....... ... ....... 02- ....... ... ....... ... ....... ... ....... ... .......
    1234567 ... 1234567 ... 1234567 ... 1234567 ... 1234567 ... 1______ ... 1234567
    ....... ... ....... ... ....... 01- ....... ... ....... OOO ....... ... .......
    _2_____ ... 1234567 ... 1234567 ... ____5__ ... 1234567 ... 1234567 ... 1234567
    ....... ... ....... ... ....... ... ....... 04- ....... ... ....... ... .......
    1234567 ... 1234567 ... 1234567 ... 1234567 ... 1234567 ... 1234567 ... 1234567
    ....... ... ....... ... ....... ... ....... ... ....... ... ....... ... .......
    __3____ ... 1234567 ... 1234567 ... 1234567 ... 1234567 ... 1234567 ... 1234567
    ....... ... ....... ... ....... ... ....... ... ....... ... ....... ... .......
    1______ ... 1234567 ... 1234567 ... 1234567 ... 1234567 ... ____5__ ... 1234567
    """
    assert default_test_puzzle(puzzle_string, Mathrax, Solving.mathrax_techniques())


@pytest.mark.skip("EXPLICITLY")
def test_mathrax_019():
    puzzle_string = f"""
    019.mathrax
    7
    1234567 ... 1234567 ... 1234567 ... 1234567 ... 1234567 ... 1234567 ... 1234567
    ....... ... ....... ... ....... ... ....... ... ....... ... ....... 01- .......
    1234567 ... 1234567 ... 1234567 ... 1234567 ... 1234567 ... 1234567 ... 1234567
    ....... ... ....... 05- ....... ... ....... ... ....... 02/ ....... ... .......
    1234567 ... 1234567 ... 1234567 ... 1234567 ... 1234567 ... 1234567 ... 1234567
    ....... ... ....... ... ....... ... ....... 04+ ....... ... ....... ... .......
    1234567 ... 1234567 ... 1234567 ... 1234567 ... 1234567 ... 1234567 ... 1234567
    ....... ... ....... ... ....... ... ....... ... ....... ... ....... ... .......
    1234567 ... 1234567 ... 1234567 ... 1234567 ... 1234567 ... 1234567 ... 1234567
    ....... 01- ....... ... ....... ... ....... ... ....... 08+ ....... ... .......
    1234567 ... 1234567 ... 1234567 ... 1234567 ... 1234567 ... 1234567 ... 1234567
    ....... ... ....... ... ....... 01- ....... ... ....... ... ....... 05+ .......
    1234567 ... 1234567 ... 1234567 ... 1234567 ... 1234567 ... 1234567 ... 1234567
    """
    assert default_test_puzzle(puzzle_string, Mathrax, Solving.mathrax_techniques())
