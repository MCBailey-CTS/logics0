import pytest

from Constants import Constants
from Techniques import Techs, Solving
from _defaults import default_test_puzzle, default_test_explicit_actual_expected
from _puzzles import Sudoku, Magnets, MineShips, Sentinels, Kropki, Parks1, Tenner, RobotFences, RobotCrosswords, \
    Minesweeper, Knightoku, Snail3, Skyscrapers, Tents, Sumscrapers, Walls, Mathrax, Parks2, AbstractPainting, \
    Futoshiki, HiddenStars, Clouds, BattleShips, Kakuro, LightenUp, Lighthouses, PowerGrid, Nurikabe

EXPLICITLY = "EXPLICITLY"


@pytest.mark.parametrize("puzzle_string, constructor, techniques", [
    (Constants.sumscrapers_008(), Sumscrapers, Solving.sumscrapers_techniques()),
    (Constants.sumscrapers_001(), Sumscrapers, Solving.sumscrapers_techniques()),
    (Constants.sumscrapers_002(), Sumscrapers, Solving.sumscrapers_techniques()),
    (Constants.sumscrapers_003(), Sumscrapers, Solving.sumscrapers_techniques()),
    (Constants.sumscrapers_004(), Sumscrapers, Solving.sumscrapers_techniques()),
    (Constants.sumscrapers_005(), Sumscrapers, Solving.sumscrapers_techniques()),
    (Constants.tenner_easier_002(), Tenner, Solving.tenner_techniques()),
    (Constants.tenner_easier_003(), Tenner, Solving.tenner_techniques()),
    (Constants.tenner_easier_004(), Tenner, Solving.tenner_techniques()),
    (Constants.sudoku_easiest_0(), Sudoku, Solving.sudoku_techniques()),
    (Constants.sudoku_easy_as_pie_0(), Sudoku, Solving.sudoku_techniques()),
    (Constants.sudoku_first_lesson(), Sudoku, Solving.sudoku_techniques()),
    (Constants.sudoku_hidden_single_0(), Sudoku, Solving.sudoku_techniques()),
    (Constants.sudoku_hidden_single_1(), Sudoku, Solving.sudoku_techniques()),
    (Constants.sudoku_hidden_single_2(), Sudoku, Solving.sudoku_techniques()),
    (Constants.sudoku_intricate_0(), Sudoku, Solving.sudoku_techniques()),
    (Constants.sudoku_intricate_1(), Sudoku, Solving.sudoku_techniques()),
    (Constants.sudoku_intricate_2(), Sudoku, Solving.sudoku_techniques()),
    (Constants.sudoku_intricate_3(), Sudoku, Solving.sudoku_techniques()),
    (Constants.sudoku_intricate_4(), Sudoku, Solving.sudoku_techniques()),
    (Constants.sudoku_intricate_5(), Sudoku, Solving.sudoku_techniques()),
    (Constants.sudoku_intricate_6(), Sudoku, Solving.sudoku_techniques()),
    (Constants.sudoku_intricate_7(), Sudoku, Solving.sudoku_techniques()),
    (Constants.sudoku_intricate_8(), Sudoku, Solving.sudoku_techniques()),
    (Constants.sudoku_mild_0(), Sudoku, Solving.sudoku_techniques()),
    (Constants.sudoku_mild_1(), Sudoku, Solving.sudoku_techniques()),
    (Constants.sudoku_mild_2(), Sudoku, Solving.sudoku_techniques()),
    (Constants.sudoku_mild_3(), Sudoku, Solving.sudoku_techniques()),
    (Constants.sudoku_mild_4(), Sudoku, Solving.sudoku_techniques()),
    (Constants.sudoku_moderate_0(), Sudoku, Solving.sudoku_techniques()),
    (Constants.sudoku_naked_pair_0(), Sudoku, Solving.sudoku_techniques()),
    (Constants.sudoku_naked_pair_1(), Sudoku, Solving.sudoku_techniques()),
    (Constants.sudoku_naked_pair_2(), Sudoku, Solving.sudoku_techniques()),
    (Constants.sudoku_picnic_0(), Sudoku, Solving.sudoku_techniques()),
    (Constants.sudoku_picnic_1(), Sudoku, Solving.sudoku_techniques()),
    (Constants.sudoku_picnic_2(), Sudoku, Solving.sudoku_techniques()),
    (Constants.sudoku_second_lesson_0(), Sudoku, Solving.sudoku_techniques()),
    (Constants.sudoku_simple_0(), Sudoku, Solving.sudoku_techniques()),
    # (Constants.parks1_001(), Parks1, Solving.parks1_techniques()),
    # (Constants.parks1_002(), Parks1, Solving.parks1_techniques()),
    # (Constants.parks1_003(), Parks1, Solving.parks1_techniques()),
    # (Constants.parks1_006(), Parks1, Solving.parks1_techniques()),
    # (Constants.parks1_007(), Parks1, Solving.parks1_techniques()),
    # (Constants.parks1_008(), Parks1, Solving.parks1_techniques()),
    # (Constants.parks1_beach_001(), Parks1, Solving.parks1_techniques()),
    # (Constants.parks1_beach_002(), Parks1, Solving.parks1_techniques()),
    # (Constants.parks1_beach_003(), Parks1, Solving.parks1_techniques()),
    # (Constants.parks1_beach_004(), Parks1, Solving.parks1_techniques()),
    # (Constants.parks1_maui_001(), Parks1, Solving.parks1_techniques()),
    # (Constants.parks1_spring_001(), Parks1, Solving.parks1_techniques()),
    # (Constants.parks1_spring_002(), Parks1, Solving.parks1_techniques()),
    # (Constants.parks1_spring_003(), Parks1, Solving.parks1_techniques()),
    # (Constants.parks1_spring_004(), Parks1, Solving.parks1_techniques()),
    # (Constants.parks1_spring_005(), Parks1, Solving.parks1_techniques()),
    # (Constants.parks1_spring_006(), Parks1, Solving.parks1_techniques()),
    # (Constants.parks1_spring_007(), Parks1, Solving.parks1_techniques()),
    # (Constants.parks1_spring_008(), Parks1, Solving.parks1_techniques()),
    (Constants.robot_fences_001(), RobotFences, Solving.robot_fences_techniques()),
    (Constants.robot_fences_002(), RobotFences, Solving.robot_fences_techniques()),
    (Constants.robot_fences_003(), RobotFences, Solving.robot_fences_techniques()),
    (Constants.robot_fences_004(), RobotFences, Solving.robot_fences_techniques()),
    (Constants.robot_fences_005(), RobotFences, Solving.robot_fences_techniques()),
    (Constants.robot_fences_006(), RobotFences, Solving.robot_fences_techniques()),
    (Constants.robot_fences_007(), RobotFences, Solving.robot_fences_techniques()),
    (Constants.robot_fences_008(), RobotFences, Solving.robot_fences_techniques()),
    (Constants.robot_fences_009(), RobotFences, Solving.robot_fences_techniques()),
    (Constants.robot_fences_010(), RobotFences, Solving.robot_fences_techniques()),
    (Constants.robot_fences_011(), RobotFences, Solving.robot_fences_techniques()),
    (Constants.robot_fences_012(), RobotFences, Solving.robot_fences_techniques()),
    (Constants.robot_fences_013(), RobotFences, Solving.robot_fences_techniques()),
    (Constants.robot_fences_014(), RobotFences, Solving.robot_fences_techniques()),
    (Constants.robot_fences_015(), RobotFences, Solving.robot_fences_techniques()),
    (Constants.robot_fences_016(), RobotFences, Solving.robot_fences_techniques()),
    (Constants.robot_fences_017(), RobotFences, Solving.robot_fences_techniques()),
    (Constants.robot_fences_018(), RobotFences, Solving.robot_fences_techniques()),
    (Constants.robot_fences_019(), RobotFences, Solving.robot_fences_techniques()),
    (Constants.robot_fences_020(), RobotFences, Solving.robot_fences_techniques()),
    (Constants.robot_fences_022(), RobotFences, Solving.robot_fences_techniques()),
    (Constants.robot_fences_023(), RobotFences, Solving.robot_fences_techniques()),
    (Constants.robot_fences_025(), RobotFences, Solving.robot_fences_techniques()),
    (Constants.robot_fences_028(), RobotFences, Solving.robot_fences_techniques()),
    (Constants.robot_fences_030(), RobotFences, Solving.robot_fences_techniques()),
    (Constants.tenner_001(), Tenner, Solving.tenner_techniques()),
    (Constants.tenner_002(), Tenner, Solving.tenner_techniques()),
    (Constants.tenner_003(), Tenner, Solving.tenner_techniques()),
    (Constants.tenner_004(), Tenner, Solving.tenner_techniques()),
    (Constants.tenner_005(), Tenner, Solving.tenner_techniques()),
    (Constants.tenner_006(), Tenner, Solving.tenner_techniques()),
    (Constants.tenner_008(), Tenner, Solving.tenner_techniques()),
    (Constants.tenner_009(), Tenner, Solving.tenner_techniques()),
    (Constants.skyscrapers_001(), Skyscrapers, Solving.skyscrapers_techniques()),
    (Constants.skyscrapers_002(), Skyscrapers, Solving.skyscrapers_techniques()),
    (Constants.skyscrapers_003(), Skyscrapers, Solving.skyscrapers_techniques()),
    (Constants.skyscrapers_005(), Skyscrapers, Solving.skyscrapers_techniques()),
    (Constants.skyscrapers_tc_001(), Skyscrapers, Solving.skyscrapers_techniques()),
    (Constants.skyscrapers_tc_002(), Skyscrapers, Solving.skyscrapers_techniques()),
    (Constants.abstractpainting_001(), AbstractPainting, Solving.abstractpainting_techniques()),
    (Constants.abstractpainting_002(), AbstractPainting, Solving.abstractpainting_techniques()),
    (Constants.abstractpainting_003(), AbstractPainting, Solving.abstractpainting_techniques()),
    (Constants.abstractpainting_004(), AbstractPainting, Solving.abstractpainting_techniques()),
    (Constants.abstractpainting_005(), AbstractPainting, Solving.abstractpainting_techniques()),
    (Constants.abstractpainting_006(), AbstractPainting, Solving.abstractpainting_techniques()),
    (Constants.power_grid_001(), PowerGrid, Solving.power_grid_techniques()),
    (Constants.power_grid_002(), PowerGrid, Solving.power_grid_techniques()),
    (Constants.power_grid_003(), PowerGrid, Solving.power_grid_techniques()),
    (Constants.power_grid_004(), PowerGrid, Solving.power_grid_techniques()),
    (Constants.power_grid_005(), PowerGrid, Solving.power_grid_techniques()),
    (Constants.power_grid_006(), PowerGrid, Solving.power_grid_techniques()),
    (Constants.power_grid_011(), PowerGrid, Solving.power_grid_techniques()),
    (Constants.power_grid_012(), PowerGrid, Solving.power_grid_techniques()),
    (Constants.power_grid_013(), PowerGrid, Solving.power_grid_techniques()),
    (Constants.power_grid_014(), PowerGrid, Solving.power_grid_techniques()),
    
    # (Constants.parks1_005(), Parks1, Solving.parks1_techniques()),
    # (Constants.parks1_009(), Parks1, Solving.parks1_techniques()),
    # (Constants.parks1_010(), Parks1, Solving.parks1_techniques()),
    # (Constants.parks1_011(), Parks1, Solving.parks1_techniques()),
    # (Constants.parks1_012(), Parks1, Solving.parks1_techniques()),
    # (Constants.parks1_013(), Parks1, Solving.parks1_techniques()),
    # (Constants.parks1_014(), Parks1, Solving.parks1_techniques()),
    # (Constants.parks1_spring_009(), Parks1, Solving.parks1_techniques()),
    # (Constants.parks1_spring_010(), Parks1, Solving.parks1_techniques()),
    # (Constants.parks1_spring_011(), Parks1, Solving.parks1_techniques()),
    # (Constants.parks1_spring_012(), Parks1, Solving.parks1_techniques()),
    # (Constants.parks1_spring_013(), Parks1, Solving.parks1_techniques()),
    # (Constants.parks1_spring_014(), Parks1, Solving.parks1_techniques()),
    # (Constants.parks1_spring_015(), Parks1, Solving.parks1_techniques()),
    # (Constants.parks1_spring_016(), Parks1, Solving.parks1_techniques()),
    # (Constants.parks1_spring_017(), Parks1, Solving.parks1_techniques()),
    # (Constants.parks1_spring_018(), Parks1, Solving.parks1_techniques()),
    # (Constants.parks1_spring_019(), Parks1, Solving.parks1_techniques()),
    # (Constants.parks1_spring_020(), Parks1, Solving.parks1_techniques()),
    # (Constants.parks1_spring_021(), Parks1, Solving.parks1_techniques()),
    # (Constants.parks1_spring_022(), Parks1, Solving.parks1_techniques()),
    # (Constants.parks1_spring_023(), Parks1, Solving.parks1_techniques()),
    # (Constants.parks1_spring_024(), Parks1, Solving.parks1_techniques()),
    # (Constants.parks1_spring_025(), Parks1, Solving.parks1_techniques()),
    # (Constants.parks1_spring_026(), Parks1, Solving.parks1_techniques()),
    # (Constants.parks1_spring_027(), Parks1, Solving.parks1_techniques()),
    # (Constants.parks1_spring_028(), Parks1, Solving.parks1_techniques()),
    # (Constants.parks1_spring_029(), Parks1, Solving.parks1_techniques()),
    # (Constants.parks1_spring_030(), Parks1, Solving.parks1_techniques()),
    # (Constants.parks1_spring_031(), Parks1, Solving.parks1_techniques()),
    # (Constants.parks1_spring_032(), Parks1, Solving.parks1_techniques()),
    # (Constants.parks1_spring_033(), Parks1, Solving.parks1_techniques()),
    # (Constants.parks1_spring_034(), Parks1, Solving.parks1_techniques()),
    # (Constants.parks1_spring_039(), Parks1, Solving.parks1_techniques()),
    # (Constants.parks1_spring_045(), Parks1, Solving.parks1_techniques()),
    # (Constants.parks1_spring_046(), Parks1, Solving.parks1_techniques()),
    # (Constants.parks1_spring_047(), Parks1, Solving.parks1_techniques()),
    # (Constants.parks1_spring_051(), Parks1, Solving.parks1_techniques()),
    # (Constants.parks1_spring_062(), Parks1, Solving.parks1_techniques()),
    # (Constants.parks1_winter_037(), Parks1, Solving.parks1_techniques()),
    # (Constants.parks1_winter_038(), Parks1, Solving.parks1_techniques()),
    # (Constants.parks1_winter_039(), Parks1, Solving.parks1_techniques()),
    # (Constants.parks1_winter_040(), Parks1, Solving.parks1_techniques()),
    # (Constants.parks1_winter_041(), Parks1, Solving.parks1_techniques()),
    # (Constants.parks1_winter_042(), Parks1, Solving.parks1_techniques()),
    # (Constants.parks1_winter_044(), Parks1, Solving.parks1_techniques()),
    # (Constants.parks1_winter_045(), Parks1, Solving.parks1_techniques()),
    # (Constants.parks1_winter_046(), Parks1, Solving.parks1_techniques()),
    # (Constants.parks1_winter_047(), Parks1, Solving.parks1_techniques()),
    # (Constants.parks1_winter_048(), Parks1, Solving.parks1_techniques()),
    # (Constants.parks1_winter_049(), Parks1, Solving.parks1_techniques()),
    # (Constants.parks1_winter_050(), Parks1, Solving.parks1_techniques()),
    # (Constants.parks1_winter_051(), Parks1, Solving.parks1_techniques()),

])
def test_default_puzzle(puzzle_string, constructor, techniques):
    assert default_test_puzzle(puzzle_string, constructor, techniques)


@pytest.mark.parametrize("constructor, technique, actual, expected", [
    (Sudoku,
     Techs.JellyFish(),
     Constants.sudoku_explicit_jelly_fish_cols_actual(),
     Constants.sudoku_explicit_jelly_fish_cols_expected()),
    (Sudoku,
     Techs.JellyFish(),
     Constants.sudoku_explicit_jelly_fish_rows_actual(),
     Constants.sudoku_explicit_jelly_fish_rows_expected()),
    (Sudoku,
     Techs.UniqueRectangleType1(),
     Constants.sudoku_explicit_unique_rectangle_type1_north_west_row_chute_actual(),
     Constants.sudoku_explicit_unique_rectangle_type1_north_west_row_chute_expected()),
    (Sudoku,
     Techs.UniqueRectangleType1(),
     Constants.sudoku_explicit_unique_rectangle_type1_south_east_row_chute_actual(),
     Constants.sudoku_explicit_unique_rectangle_type1_south_east_row_chute_expected()),
    (Sudoku,
     Techs.UniqueRectangleType1(),
     Constants.sudoku_explicit_unique_rectangle_type1_south_west_row_chute_actual(),
     Constants.sudoku_explicit_unique_rectangle_type1_south_west_row_chute_expected()),
    (Sudoku,
     Techs.UniqueRectangleType1(),
     Constants.sudoku_explicit_unique_rectangle_type1_north_east_col_chute_actual(),
     Constants.sudoku_explicit_unique_rectangle_type1_north_east_col_chute_expected()),
    (Sudoku,
     Techs.UniqueRectangleType1(),
     Constants.sudoku_explicit_unique_rectangle_type1_north_west_col_chute_actual(),
     Constants.sudoku_explicit_unique_rectangle_type1_north_west_col_chute_expected()),
    (Sudoku,
     Techs.UniqueRectangleType1(),
     Constants.sudoku_explicit_unique_rectangle_type1_south_east_col_chute_actual(),
     Constants.sudoku_explicit_unique_rectangle_type1_south_east_col_chute_expected()),
    (Sudoku,
     Techs.UniqueRectangleType1(),
     Constants.sudoku_explicit_unique_rectangle_type1_south_west_col_chute_actual(),
     Constants.sudoku_explicit_unique_rectangle_type1_south_west_col_chute_expected()),
    (Sudoku,
     Techs.SwordFish(),
     Constants.sudoku_explicit_sword_fish_rows_actual(),
     Constants.sudoku_explicit_sword_fish_rows_expected()),
    (Sudoku,
     Techs.SwordFish(),
     Constants.sudoku_explicit_sword_fish_cols_actual(),
     Constants.sudoku_explicit_sword_fish_cols_expected()),
    (Sudoku,
     Techs.XyWing(),
     Constants.sudoku_explicit_xy_wing_north_east_actual(),
     Constants.sudoku_explicit_xy_wing_north_east_expected()),
    (Sudoku,
     Techs.XyWing(),
     Constants.sudoku_explicit_xy_wing_south_west_actual(),
     Constants.sudoku_explicit_xy_wing_south_west_expected()),
    (Magnets,
     Techs.MagnetsZero(),
     Constants.magnets_zero_cols_actual(),
     Constants.magnets_zero_cols_expected()),
    (Magnets,
     Techs.MagnetsPair(),
     Constants.magnets_pairs_actual(),
     Constants.magnets_pairs_expected()),
    (Magnets,
     Techs.MagnetsFullHouse(),
     Constants.magnets_full_house_even_actual(),
     Constants.magnets_full_house_even_expected()),
    (Magnets,
     Techs.MagnetsZero(),
     Constants.magnets_zero_rows_actual(),
     Constants.magnets_zero_rows_expected()),
    (Kropki,
     Techs.KropkiBw(),
     Constants.kropki_explicit_bw_actual(),
     Constants.kropki_explicit_bw_expected()),
    (Kropki,
     Techs.KropkiBlack(),
     Constants.kropki_explicit_black_actual(),
     Constants.kropki_explicit_black_expected()),
    (Kropki,
     Techs.KropkiWhite(),
     Constants.kropki_explicit_white_actual(),
     Constants.kropki_explicit_white_expected()),
    (Kropki,
     Techs.KropkiEmpty(),
     Constants.kropki_explicit_empty_actual(),
     Constants.kropki_explicit_empty_expected()),
    (Kropki,
     Techs.KropkiBb(),
     Constants.kropki_explicit_bb_actual(),
     Constants.kropki_explicit_bb_expected()),
    (Kropki,
     Techs.KropkiDominatingEmpty(),
     Constants.kropki_explicit_dominating_empty1_actual(),
     Constants.kropki_explicit_dominating_empty1_expected()),
    (Kropki,
     Techs.KropkiDominatingEmpty(),
     Constants.kropki_explicit_dominating_empty3_actual(),
     Constants.kropki_explicit_dominating_empty3_expected()),
    (Kropki,
     Techs.KropkiDominatingEmpty(),
     Constants.kropki_explicit_dominating_empty4_actual(),
     Constants.kropki_explicit_dominating_empty4_expected()),
    (Kropki,
     Techs.KropkiDominatingEmpty(),
     Constants.kropki_explicit_dominating_empty5_actual(),
     Constants.kropki_explicit_dominating_empty5_expected()),
    (Kropki,
     Techs.KropkiDominatingEmpty(),
     Constants.kropki_explicit_dominating_empty6_actual(),
     Constants.kropki_explicit_dominating_empty6_expected()),
    (Kropki,
     Techs.KropkiDominatingEmpty(),
     Constants.kropki_explicit_dominating_empty7_actual(),
     Constants.kropki_explicit_dominating_empty7_expected()),
    (Kropki,
     Techs.KropkiDominatingEmpty(),
     Constants.kropki_explicit_dominating_empty8_actual(),
     Constants.kropki_explicit_dominating_empty8_expected()),
    (Kropki,
     Techs.KropkiDominatingEmpty(),
     Constants.kropki_explicit_dominating_empty9_actual(),
     Constants.kropki_explicit_dominating_empty9_expected()),
    (Kropki,
     Techs.KropkiDiamondWwwe(),
     Constants.kropki_explicit_diamond_wwwe_actual(),
     Constants.kropki_explicit_diamond_wwwe_expected()),
])
def test_default_actual_expected(constructor, technique, actual, expected):
    assert default_test_explicit_actual_expected(constructor, technique, actual, expected)
